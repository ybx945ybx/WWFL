/**
 * 五五海淘返利APP新版接口
 * 更新日志<br> 相对于上一build的变更： <br/>Nu 调整搜索模型 
 *
 * OpenAPI spec version: 1.8 build20180202-2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import io.swagger.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("ActionTokenIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActionTokenIfModel>>(){}.getType();
    }
    
    if ("ActionTokenIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ActionTokenIfModelData>>(){}.getType();
    }
    
    if ("AddPostSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddPostSuccessModel>>(){}.getType();
    }
    
    if ("AddPostSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddPostSuccessModelData>>(){}.getType();
    }
    
    if ("AddTopicSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddTopicSuccessModel>>(){}.getType();
    }
    
    if ("AddTopicSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddTopicSuccessModelData>>(){}.getType();
    }
    
    if ("AddressModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddressModel>>(){}.getType();
    }
    
    if ("AppWidgetModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AppWidgetModel>>(){}.getType();
    }
    
    if ("AppWidgetStyleModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AppWidgetStyleModel>>(){}.getType();
    }
    
    if ("AppWidgetStyleModelImageStyle".equalsIgnoreCase(className)) {
      return new TypeToken<List<AppWidgetStyleModelImageStyle>>(){}.getType();
    }
    
    if ("AppWidgetStyleModelTextStyle".equalsIgnoreCase(className)) {
      return new TypeToken<List<AppWidgetStyleModelTextStyle>>(){}.getType();
    }
    
    if ("AppWidgetsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AppWidgetsIfModel>>(){}.getType();
    }
    
    if ("AppWidgetsStyleIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AppWidgetsStyleIfModel>>(){}.getType();
    }
    
    if ("ApplicationForTrialModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApplicationForTrialModel>>(){}.getType();
    }
    
    if ("ApplicationsForTrialListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApplicationsForTrialListModel>>(){}.getType();
    }
    
    if ("ApplicationsForTrialListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApplicationsForTrialListModelData>>(){}.getType();
    }
    
    if ("AreaModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AreaModel>>(){}.getType();
    }
    
    if ("AreasInfoIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<AreasInfoIfModel>>(){}.getType();
    }
    
    if ("BankCardsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<BankCardsIfModel>>(){}.getType();
    }
    
    if ("BankCardsIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<BankCardsIfModelData>>(){}.getType();
    }
    
    if ("BanksIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<BanksIfModel>>(){}.getType();
    }
    
    if ("BanksIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<BanksIfModelData>>(){}.getType();
    }
    
    if ("BindBankCardSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<BindBankCardSuccessModel>>(){}.getType();
    }
    
    if ("BindBankCardSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<BindBankCardSuccessModelData>>(){}.getType();
    }
    
    if ("CategoriesIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoriesIfModel>>(){}.getType();
    }
    
    if ("CategoryModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryModel>>(){}.getType();
    }
    
    if ("ChatMsgModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChatMsgModel>>(){}.getType();
    }
    
    if ("ChatMsgsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChatMsgsListModel>>(){}.getType();
    }
    
    if ("ChatMsgsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChatMsgsListModelData>>(){}.getType();
    }
    
    if ("CollectionStoreModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CollectionStoreModel>>(){}.getType();
    }
    
    if ("CollectionStoresListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CollectionStoresListModel>>(){}.getType();
    }
    
    if ("CollectionStoresListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<CollectionStoresListModelData>>(){}.getType();
    }
    
    if ("CommentModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommentModel>>(){}.getType();
    }
    
    if ("CommentReplyModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommentReplyModel>>(){}.getType();
    }
    
    if ("CommentSuccessIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommentSuccessIfModel>>(){}.getType();
    }
    
    if ("CommentsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommentsListModel>>(){}.getType();
    }
    
    if ("CommentsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<CommentsListModelData>>(){}.getType();
    }
    
    if ("CompletingWordsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CompletingWordsIfModel>>(){}.getType();
    }
    
    if ("CompletingWordsIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<CompletingWordsIfModelData>>(){}.getType();
    }
    
    if ("CountryShippingBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CountryShippingBriefModel>>(){}.getType();
    }
    
    if ("CountryShippingListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CountryShippingListModel>>(){}.getType();
    }
    
    if ("CouponModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CouponModel>>(){}.getType();
    }
    
    if ("CreditCardModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreditCardModel>>(){}.getType();
    }
    
    if ("CurrenciesIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CurrenciesIfModel>>(){}.getType();
    }
    
    if ("CurrenciesIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<CurrenciesIfModelData>>(){}.getType();
    }
    
    if ("DealBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealBriefModel>>(){}.getType();
    }
    
    if ("DealCategoriesModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealCategoriesModel>>(){}.getType();
    }
    
    if ("DealCategoryModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealCategoryModel>>(){}.getType();
    }
    
    if ("DealDailiesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealDailiesListModel>>(){}.getType();
    }
    
    if ("DealDailiesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealDailiesListModelData>>(){}.getType();
    }
    
    if ("DealDailyModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealDailyModel>>(){}.getType();
    }
    
    if ("DealDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealDetailModel>>(){}.getType();
    }
    
    if ("DealDetailModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealDetailModelData>>(){}.getType();
    }
    
    if ("DealDetailModelDataRecommendedTopics".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealDetailModelDataRecommendedTopics>>(){}.getType();
    }
    
    if ("DealDetailModelDataStoreInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealDetailModelDataStoreInfo>>(){}.getType();
    }
    
    if ("DealExtraIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealExtraIfModel>>(){}.getType();
    }
    
    if ("DealExtraModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealExtraModel>>(){}.getType();
    }
    
    if ("DealIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealIndexModel>>(){}.getType();
    }
    
    if ("DealIndexModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealIndexModelData>>(){}.getType();
    }
    
    if ("DealIndexModelDataTodayTalkTopic".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealIndexModelDataTodayTalkTopic>>(){}.getType();
    }
    
    if ("DealJumpingPageModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealJumpingPageModel>>(){}.getType();
    }
    
    if ("DealModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealModel>>(){}.getType();
    }
    
    if ("DealPublicityIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealPublicityIfModel>>(){}.getType();
    }
    
    if ("DealPublicityIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealPublicityIfModelData>>(){}.getType();
    }
    
    if ("DealsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealsListModel>>(){}.getType();
    }
    
    if ("DealsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealsListModelData>>(){}.getType();
    }
    
    if ("DealsListWithAdsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealsListWithAdsModel>>(){}.getType();
    }
    
    if ("DealsListWithAdsModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealsListWithAdsModelData>>(){}.getType();
    }
    
    if ("DealsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealsModel>>(){}.getType();
    }
    
    if ("DealsWithAdsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<DealsWithAdsModel>>(){}.getType();
    }
    
    if ("EnteredStoreModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<EnteredStoreModel>>(){}.getType();
    }
    
    if ("EnteredStoresListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<EnteredStoresListModel>>(){}.getType();
    }
    
    if ("EnteredStoresListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<EnteredStoresListModelData>>(){}.getType();
    }
    
    if ("ErrorModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ErrorModel>>(){}.getType();
    }
    
    if ("ErrorWithActionTokenModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ErrorWithActionTokenModel>>(){}.getType();
    }
    
    if ("ErrorWithActionTokenModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ErrorWithActionTokenModelData>>(){}.getType();
    }
    
    if ("ExchangeRateIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExchangeRateIfModel>>(){}.getType();
    }
    
    if ("ExchangeRateIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExchangeRateIfModelData>>(){}.getType();
    }
    
    if ("ExchangeRateModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExchangeRateModel>>(){}.getType();
    }
    
    if ("ExchangesRatesIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExchangesRatesIfModel>>(){}.getType();
    }
    
    if ("ExchangesRatesIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExchangesRatesIfModelData>>(){}.getType();
    }
    
    if ("FollowingDealModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<FollowingDealModel>>(){}.getType();
    }
    
    if ("FollowingDealsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<FollowingDealsListModel>>(){}.getType();
    }
    
    if ("FollowingDealsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<FollowingDealsListModelData>>(){}.getType();
    }
    
    if ("ForumBoardIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumBoardIndexModel>>(){}.getType();
    }
    
    if ("ForumBoardIndexModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumBoardIndexModelData>>(){}.getType();
    }
    
    if ("ForumBoardModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumBoardModel>>(){}.getType();
    }
    
    if ("ForumBoardTopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumBoardTopicsListModel>>(){}.getType();
    }
    
    if ("ForumBoardsIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumBoardsIndexModel>>(){}.getType();
    }
    
    if ("ForumBoardsIndexModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumBoardsIndexModelData>>(){}.getType();
    }
    
    if ("ForumBoardsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumBoardsModel>>(){}.getType();
    }
    
    if ("ForumIndexBoardModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumIndexBoardModel>>(){}.getType();
    }
    
    if ("ForumIndexFollowedModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumIndexFollowedModel>>(){}.getType();
    }
    
    if ("ForumIndexFollowedModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumIndexFollowedModelData>>(){}.getType();
    }
    
    if ("ForumIndexHotTopicsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumIndexHotTopicsModel>>(){}.getType();
    }
    
    if ("ForumIndexHotTopicsModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumIndexHotTopicsModelData>>(){}.getType();
    }
    
    if ("ForumIndexShowOrdersModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumIndexShowOrdersModel>>(){}.getType();
    }
    
    if ("ForumIndexShowOrdersModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumIndexShowOrdersModelData>>(){}.getType();
    }
    
    if ("ForumSectionModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumSectionModel>>(){}.getType();
    }
    
    if ("ForumSubBoardModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumSubBoardModel>>(){}.getType();
    }
    
    if ("ForumTalentsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumTalentsListModel>>(){}.getType();
    }
    
    if ("ForumTalentsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumTalentsListModelData>>(){}.getType();
    }
    
    if ("ForumTopicBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumTopicBriefModel>>(){}.getType();
    }
    
    if ("ForumTopicBriefModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumTopicBriefModelData>>(){}.getType();
    }
    
    if ("ForumTopicViewModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumTopicViewModel>>(){}.getType();
    }
    
    if ("ForumTopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumTopicsListModel>>(){}.getType();
    }
    
    if ("ForumUserIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumUserIndexModel>>(){}.getType();
    }
    
    if ("ForumUserIndexModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumUserIndexModelData>>(){}.getType();
    }
    
    if ("ForumUserInfoModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForumUserInfoModel>>(){}.getType();
    }
    
    if ("FriendModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<FriendModel>>(){}.getType();
    }
    
    if ("FriendsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<FriendsListModel>>(){}.getType();
    }
    
    if ("FriendsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<FriendsListModelData>>(){}.getType();
    }
    
    if ("FriendsRequestionsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<FriendsRequestionsListModel>>(){}.getType();
    }
    
    if ("FriendsRequestionsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<FriendsRequestionsListModelData>>(){}.getType();
    }
    
    if ("FriendsRequestionsListModelDataRows".equalsIgnoreCase(className)) {
      return new TypeToken<List<FriendsRequestionsListModelDataRows>>(){}.getType();
    }
    
    if ("FriendsSectionsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<FriendsSectionsModel>>(){}.getType();
    }
    
    if ("FriendsSectionsModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<FriendsSectionsModelData>>(){}.getType();
    }
    
    if ("GeetestParamsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<GeetestParamsModel>>(){}.getType();
    }
    
    if ("GeetestParamsModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<GeetestParamsModelData>>(){}.getType();
    }
    
    if ("HotGoodsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<HotGoodsModel>>(){}.getType();
    }
    
    if ("IfFilterModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<IfFilterModel>>(){}.getType();
    }
    
    if ("IfFilterModelValues".equalsIgnoreCase(className)) {
      return new TypeToken<List<IfFilterModelValues>>(){}.getType();
    }
    
    if ("In24hDealsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<In24hDealsListModel>>(){}.getType();
    }
    
    if ("In24hDealsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<In24hDealsListModelData>>(){}.getType();
    }
    
    if ("In24hDealsListModelDataCategories".equalsIgnoreCase(className)) {
      return new TypeToken<List<In24hDealsListModelDataCategories>>(){}.getType();
    }
    
    if ("InviteIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<InviteIfModel>>(){}.getType();
    }
    
    if ("InviteIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<InviteIfModelData>>(){}.getType();
    }
    
    if ("InvitedFriendModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<InvitedFriendModel>>(){}.getType();
    }
    
    if ("InvitedFriendsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<InvitedFriendsListModel>>(){}.getType();
    }
    
    if ("InvitedFriendsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<InvitedFriendsListModelData>>(){}.getType();
    }
    
    if ("InviterModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<InviterModel>>(){}.getType();
    }
    
    if ("InvitersListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<InvitersListModel>>(){}.getType();
    }
    
    if ("InvitersListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<InvitersListModelData>>(){}.getType();
    }
    
    if ("KeywordsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<KeywordsIfModel>>(){}.getType();
    }
    
    if ("LinkGeneratorModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinkGeneratorModel>>(){}.getType();
    }
    
    if ("LinkGeneratorModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinkGeneratorModelData>>(){}.getType();
    }
    
    if ("LinkWidgetModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<LinkWidgetModel>>(){}.getType();
    }
    
    if ("LoginSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<LoginSuccessModel>>(){}.getType();
    }
    
    if ("LoginSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<LoginSuccessModelData>>(){}.getType();
    }
    
    if ("MsgNoticeModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<MsgNoticeModel>>(){}.getType();
    }
    
    if ("MsgNoticesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<MsgNoticesListModel>>(){}.getType();
    }
    
    if ("MsgNoticesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<MsgNoticesListModelData>>(){}.getType();
    }
    
    if ("MsgsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<MsgsListModel>>(){}.getType();
    }
    
    if ("MsgsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<MsgsListModelData>>(){}.getType();
    }
    
    if ("MsgsListModelDataRows".equalsIgnoreCase(className)) {
      return new TypeToken<List<MsgsListModelDataRows>>(){}.getType();
    }
    
    if ("MyRepliesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<MyRepliesListModel>>(){}.getType();
    }
    
    if ("MyRepliesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<MyRepliesListModelData>>(){}.getType();
    }
    
    if ("MyReplyModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<MyReplyModel>>(){}.getType();
    }
    
    if ("MyReplyModelSource".equalsIgnoreCase(className)) {
      return new TypeToken<List<MyReplyModelSource>>(){}.getType();
    }
    
    if ("OfflineStoreAddressIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfflineStoreAddressIfModel>>(){}.getType();
    }
    
    if ("OfflineStoreAddressListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfflineStoreAddressListModel>>(){}.getType();
    }
    
    if ("OfflineStoreAddressListModelLists".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfflineStoreAddressListModelLists>>(){}.getType();
    }
    
    if ("OfflineStoreAddressListModelLists1".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfflineStoreAddressListModelLists1>>(){}.getType();
    }
    
    if ("OfflineStoreAddressListModelLists2".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfflineStoreAddressListModelLists2>>(){}.getType();
    }
    
    if ("OfflineStoreDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfflineStoreDetailIfModel>>(){}.getType();
    }
    
    if ("OfflineStoreDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfflineStoreDetailModel>>(){}.getType();
    }
    
    if ("OrderBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBriefModel>>(){}.getType();
    }
    
    if ("OrderDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDetailIfModel>>(){}.getType();
    }
    
    if ("OrderDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDetailModel>>(){}.getType();
    }
    
    if ("OrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderModel>>(){}.getType();
    }
    
    if ("OrdersBriefsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersBriefsListModel>>(){}.getType();
    }
    
    if ("OrdersBriefsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersBriefsListModelData>>(){}.getType();
    }
    
    if ("OrdersListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersListModel>>(){}.getType();
    }
    
    if ("OrdersListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersListModelData>>(){}.getType();
    }
    
    if ("PopupAdModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<PopupAdModel>>(){}.getType();
    }
    
    if ("PostDynamicsMsgsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<PostDynamicsMsgsListModel>>(){}.getType();
    }
    
    if ("PostDynamicsMsgsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<PostDynamicsMsgsListModelData>>(){}.getType();
    }
    
    if ("PostDynamicsMsgsListModelDataQuotation".equalsIgnoreCase(className)) {
      return new TypeToken<List<PostDynamicsMsgsListModelDataQuotation>>(){}.getType();
    }
    
    if ("PostDynamicsMsgsListModelDataRows".equalsIgnoreCase(className)) {
      return new TypeToken<List<PostDynamicsMsgsListModelDataRows>>(){}.getType();
    }
    
    if ("ProvinceModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvinceModel>>(){}.getType();
    }
    
    if ("ProvincesIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvincesIfModel>>(){}.getType();
    }
    
    if ("ReachedStoreIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReachedStoreIfModel>>(){}.getType();
    }
    
    if ("ReachedStoreIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReachedStoreIfModelData>>(){}.getType();
    }
    
    if ("RebateDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RebateDetailIfModel>>(){}.getType();
    }
    
    if ("RebateDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RebateDetailModel>>(){}.getType();
    }
    
    if ("RebateMissedOrderDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RebateMissedOrderDetailIfModel>>(){}.getType();
    }
    
    if ("RebateMissedOrderDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RebateMissedOrderDetailModel>>(){}.getType();
    }
    
    if ("RebateMissedOrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RebateMissedOrderModel>>(){}.getType();
    }
    
    if ("RebateMissedOrdersListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RebateMissedOrdersListModel>>(){}.getType();
    }
    
    if ("RebateMissedOrdersListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<RebateMissedOrdersListModelData>>(){}.getType();
    }
    
    if ("RebateModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RebateModel>>(){}.getType();
    }
    
    if ("RebatesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RebatesListModel>>(){}.getType();
    }
    
    if ("RebatesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<RebatesListModelData>>(){}.getType();
    }
    
    if ("RegionModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RegionModel>>(){}.getType();
    }
    
    if ("RegionsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RegionsIfModel>>(){}.getType();
    }
    
    if ("RepliesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<RepliesListModel>>(){}.getType();
    }
    
    if ("RepliesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<RepliesListModelData>>(){}.getType();
    }
    
    if ("ReplyModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReplyModel>>(){}.getType();
    }
    
    if ("ReplyModelQuotation".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReplyModelQuotation>>(){}.getType();
    }
    
    if ("SearchingBoardsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchingBoardsModel>>(){}.getType();
    }
    
    if ("SearchingForumBoardTopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchingForumBoardTopicsListModel>>(){}.getType();
    }
    
    if ("SendMsgSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendMsgSuccessModel>>(){}.getType();
    }
    
    if ("SendMsgSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendMsgSuccessModelData>>(){}.getType();
    }
    
    if ("ShippingCountryBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShippingCountryBriefModel>>(){}.getType();
    }
    
    if ("ShippingCountryListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShippingCountryListModel>>(){}.getType();
    }
    
    if ("ShoppingJumpingPageIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShoppingJumpingPageIfModel>>(){}.getType();
    }
    
    if ("ShoppingJumpingPageModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShoppingJumpingPageModel>>(){}.getType();
    }
    
    if ("ShoppingJumpingPageModelDealInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShoppingJumpingPageModelDealInfo>>(){}.getType();
    }
    
    if ("ShowImgVerifyModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShowImgVerifyModel>>(){}.getType();
    }
    
    if ("ShowImgVerifyModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShowImgVerifyModelData>>(){}.getType();
    }
    
    if ("SigningInSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SigningInSuccessModel>>(){}.getType();
    }
    
    if ("SingedInInfoModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SingedInInfoModel>>(){}.getType();
    }
    
    if ("SingedInInfoModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<SingedInInfoModelData>>(){}.getType();
    }
    
    if ("SingedInInfoModelDataCalendar".equalsIgnoreCase(className)) {
      return new TypeToken<List<SingedInInfoModelDataCalendar>>(){}.getType();
    }
    
    if ("SlidePicModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SlidePicModel>>(){}.getType();
    }
    
    if ("SpiderDealIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SpiderDealIfModel>>(){}.getType();
    }
    
    if ("SpiderDealModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SpiderDealModel>>(){}.getType();
    }
    
    if ("SpiderDealModelOptions".equalsIgnoreCase(className)) {
      return new TypeToken<List<SpiderDealModelOptions>>(){}.getType();
    }
    
    if ("SpiderDealModelPropertiesList".equalsIgnoreCase(className)) {
      return new TypeToken<List<SpiderDealModelPropertiesList>>(){}.getType();
    }
    
    if ("SpiderDealModelSkuList".equalsIgnoreCase(className)) {
      return new TypeToken<List<SpiderDealModelSkuList>>(){}.getType();
    }
    
    if ("SquiredModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SquiredModel>>(){}.getType();
    }
    
    if ("SquiredModelLists".equalsIgnoreCase(className)) {
      return new TypeToken<List<SquiredModelLists>>(){}.getType();
    }
    
    if ("StaticsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StaticsIfModel>>(){}.getType();
    }
    
    if ("StaticsIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<StaticsIfModelData>>(){}.getType();
    }
    
    if ("StoreBriefListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreBriefListModel>>(){}.getType();
    }
    
    if ("StoreBriefListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreBriefListModelData>>(){}.getType();
    }
    
    if ("StoreBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreBriefModel>>(){}.getType();
    }
    
    if ("StoreCategoryBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreCategoryBriefModel>>(){}.getType();
    }
    
    if ("StoreCategoryListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreCategoryListModel>>(){}.getType();
    }
    
    if ("StoreDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreDetailIfModel>>(){}.getType();
    }
    
    if ("StoreDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreDetailModel>>(){}.getType();
    }
    
    if ("StoreHotGoodsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreHotGoodsListModel>>(){}.getType();
    }
    
    if ("StoreHotGoodsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreHotGoodsListModelData>>(){}.getType();
    }
    
    if ("StoreIndexIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreIndexIfModel>>(){}.getType();
    }
    
    if ("StoreIndexIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreIndexIfModelData>>(){}.getType();
    }
    
    if ("StoreIndexIfModelDataAreasBriefs".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreIndexIfModelDataAreasBriefs>>(){}.getType();
    }
    
    if ("StoreIndexIfModelDataSuperRebate".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreIndexIfModelDataSuperRebate>>(){}.getType();
    }
    
    if ("StoreModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreModel>>(){}.getType();
    }
    
    if ("StoreProxyInfoIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreProxyInfoIfModel>>(){}.getType();
    }
    
    if ("StoreProxyInfoIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreProxyInfoIfModelData>>(){}.getType();
    }
    
    if ("StoreWithDealsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreWithDealsModel>>(){}.getType();
    }
    
    if ("StoreWithDealsModelDeals".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreWithDealsModelDeals>>(){}.getType();
    }
    
    if ("StoresBriefsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoresBriefsIfModel>>(){}.getType();
    }
    
    if ("StoresBriefsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoresBriefsListModel>>(){}.getType();
    }
    
    if ("StoresListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoresListModel>>(){}.getType();
    }
    
    if ("StoresListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoresListModelData>>(){}.getType();
    }
    
    if ("StoresRecordsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoresRecordsListModel>>(){}.getType();
    }
    
    if ("StoresRecordsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoresRecordsListModelData>>(){}.getType();
    }
    
    if ("StoresRecordsSection".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoresRecordsSection>>(){}.getType();
    }
    
    if ("StoresRecordsSectionsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoresRecordsSectionsListModel>>(){}.getType();
    }
    
    if ("StoresRecordsSectionsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoresRecordsSectionsListModelData>>(){}.getType();
    }
    
    if ("StoresWithDealsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoresWithDealsListModel>>(){}.getType();
    }
    
    if ("StoresWithDealsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoresWithDealsListModelData>>(){}.getType();
    }
    
    if ("SuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuccessModel>>(){}.getType();
    }
    
    if ("SuccessWithStringModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuccessWithStringModel>>(){}.getType();
    }
    
    if ("SystemSettingsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<SystemSettingsModel>>(){}.getType();
    }
    
    if ("SystemSettingsModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<SystemSettingsModelData>>(){}.getType();
    }
    
    if ("SystemSettingsModelDataActivity".equalsIgnoreCase(className)) {
      return new TypeToken<List<SystemSettingsModelDataActivity>>(){}.getType();
    }
    
    if ("SystemSettingsModelDataTemplateInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<SystemSettingsModelDataTemplateInfo>>(){}.getType();
    }
    
    if ("TagBrief".equalsIgnoreCase(className)) {
      return new TypeToken<List<TagBrief>>(){}.getType();
    }
    
    if ("TagModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TagModel>>(){}.getType();
    }
    
    if ("TagRelatedDealsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TagRelatedDealsListModel>>(){}.getType();
    }
    
    if ("TagRelatedDealsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<TagRelatedDealsListModelData>>(){}.getType();
    }
    
    if ("TagsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TagsListModel>>(){}.getType();
    }
    
    if ("TagsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<TagsListModelData>>(){}.getType();
    }
    
    if ("TalentModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TalentModel>>(){}.getType();
    }
    
    if ("TalentsIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TalentsIndexModel>>(){}.getType();
    }
    
    if ("TalentsIndexModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<TalentsIndexModelData>>(){}.getType();
    }
    
    if ("TalentsIndexModelDataTalentCategories".equalsIgnoreCase(className)) {
      return new TypeToken<List<TalentsIndexModelDataTalentCategories>>(){}.getType();
    }
    
    if ("TalkTopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TalkTopicsListModel>>(){}.getType();
    }
    
    if ("TalkTopicsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<TalkTopicsListModelData>>(){}.getType();
    }
    
    if ("ThirdPartyPlatformModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ThirdPartyPlatformModel>>(){}.getType();
    }
    
    if ("ThirdPartyPlatformsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ThirdPartyPlatformsModel>>(){}.getType();
    }
    
    if ("TopicBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopicBriefModel>>(){}.getType();
    }
    
    if ("TopicDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopicDetailModel>>(){}.getType();
    }
    
    if ("TopicModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopicModel>>(){}.getType();
    }
    
    if ("TopicModelTags".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopicModelTags>>(){}.getType();
    }
    
    if ("TopicReplyModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopicReplyModel>>(){}.getType();
    }
    
    if ("TopicReplyModelSource".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopicReplyModelSource>>(){}.getType();
    }
    
    if ("TopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopicsListModel>>(){}.getType();
    }
    
    if ("TopicsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopicsListModelData>>(){}.getType();
    }
    
    if ("TopicsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopicsModel>>(){}.getType();
    }
    
    if ("TopicsRepliesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopicsRepliesListModel>>(){}.getType();
    }
    
    if ("TopicsRepliesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<TopicsRepliesListModelData>>(){}.getType();
    }
    
    if ("TransshipperIndexIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransshipperIndexIfModel>>(){}.getType();
    }
    
    if ("TransshipperIndexIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransshipperIndexIfModelData>>(){}.getType();
    }
    
    if ("TransshipperIndexIfModelDataTransshippersSections".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransshipperIndexIfModelDataTransshippersSections>>(){}.getType();
    }
    
    if ("TransshipperModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransshipperModel>>(){}.getType();
    }
    
    if ("TransshippersListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransshippersListModel>>(){}.getType();
    }
    
    if ("TransshippersListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransshippersListModelData>>(){}.getType();
    }
    
    if ("UpdateModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateModel>>(){}.getType();
    }
    
    if ("UpdateModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateModelData>>(){}.getType();
    }
    
    if ("UserBriefInfoIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserBriefInfoIfModel>>(){}.getType();
    }
    
    if ("UserBriefInfoModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserBriefInfoModel>>(){}.getType();
    }
    
    if ("UserCollectionForumBoardsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserCollectionForumBoardsListModel>>(){}.getType();
    }
    
    if ("UserCollectionForumBoardsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserCollectionForumBoardsListModelData>>(){}.getType();
    }
    
    if ("UserCollectionForumTopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserCollectionForumTopicsListModel>>(){}.getType();
    }
    
    if ("UserInfoIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserInfoIfModel>>(){}.getType();
    }
    
    if ("UserInfoModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserInfoModel>>(){}.getType();
    }
    
    if ("UserInfoModelRegion".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserInfoModelRegion>>(){}.getType();
    }
    
    if ("UserInfoQuickViewIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserInfoQuickViewIfModel>>(){}.getType();
    }
    
    if ("UserInfoQuickViewIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserInfoQuickViewIfModelData>>(){}.getType();
    }
    
    if ("UserWithdrawingIndexIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserWithdrawingIndexIfModel>>(){}.getType();
    }
    
    if ("UserWithdrawingIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserWithdrawingIndexModel>>(){}.getType();
    }
    
    if ("UserWithdrawingModeModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserWithdrawingModeModel>>(){}.getType();
    }
    
    if ("UserWithdrawingModesModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<UserWithdrawingModesModel>>(){}.getType();
    }
    
    if ("VipRebateStoreModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<VipRebateStoreModel>>(){}.getType();
    }
    
    if ("VipRebateStoresListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<VipRebateStoresListModel>>(){}.getType();
    }
    
    if ("VipRebateStoresListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<VipRebateStoresListModelData>>(){}.getType();
    }
    
    if ("VisitedStoreRecordModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<VisitedStoreRecordModel>>(){}.getType();
    }
    
    if ("WithDrawingRecordsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithDrawingRecordsListModel>>(){}.getType();
    }
    
    if ("WithDrawingRecordsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithDrawingRecordsListModelData>>(){}.getType();
    }
    
    if ("WithdrawingModeModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithdrawingModeModel>>(){}.getType();
    }
    
    if ("WithdrawingModesModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithdrawingModesModel>>(){}.getType();
    }
    
    if ("WithdrawingModesModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithdrawingModesModelData>>(){}.getType();
    }
    
    if ("WithdrawingRecordDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithdrawingRecordDetailIfModel>>(){}.getType();
    }
    
    if ("WithdrawingRecordDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithdrawingRecordDetailModel>>(){}.getType();
    }
    
    if ("WithdrawingRecordModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithdrawingRecordModel>>(){}.getType();
    }
    
    if ("WithdrawingSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithdrawingSuccessModel>>(){}.getType();
    }
    
    if ("WithdrawingSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithdrawingSuccessModelData>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("ActionTokenIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<ActionTokenIfModel>(){}.getType();
    }
    
    if ("ActionTokenIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ActionTokenIfModelData>(){}.getType();
    }
    
    if ("AddPostSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<AddPostSuccessModel>(){}.getType();
    }
    
    if ("AddPostSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<AddPostSuccessModelData>(){}.getType();
    }
    
    if ("AddTopicSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<AddTopicSuccessModel>(){}.getType();
    }
    
    if ("AddTopicSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<AddTopicSuccessModelData>(){}.getType();
    }
    
    if ("AddressModel".equalsIgnoreCase(className)) {
      return new TypeToken<AddressModel>(){}.getType();
    }
    
    if ("AppWidgetModel".equalsIgnoreCase(className)) {
      return new TypeToken<AppWidgetModel>(){}.getType();
    }
    
    if ("AppWidgetStyleModel".equalsIgnoreCase(className)) {
      return new TypeToken<AppWidgetStyleModel>(){}.getType();
    }
    
    if ("AppWidgetStyleModelImageStyle".equalsIgnoreCase(className)) {
      return new TypeToken<AppWidgetStyleModelImageStyle>(){}.getType();
    }
    
    if ("AppWidgetStyleModelTextStyle".equalsIgnoreCase(className)) {
      return new TypeToken<AppWidgetStyleModelTextStyle>(){}.getType();
    }
    
    if ("AppWidgetsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<AppWidgetsIfModel>(){}.getType();
    }
    
    if ("AppWidgetsStyleIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<AppWidgetsStyleIfModel>(){}.getType();
    }
    
    if ("ApplicationForTrialModel".equalsIgnoreCase(className)) {
      return new TypeToken<ApplicationForTrialModel>(){}.getType();
    }
    
    if ("ApplicationsForTrialListModel".equalsIgnoreCase(className)) {
      return new TypeToken<ApplicationsForTrialListModel>(){}.getType();
    }
    
    if ("ApplicationsForTrialListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ApplicationsForTrialListModelData>(){}.getType();
    }
    
    if ("AreaModel".equalsIgnoreCase(className)) {
      return new TypeToken<AreaModel>(){}.getType();
    }
    
    if ("AreasInfoIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<AreasInfoIfModel>(){}.getType();
    }
    
    if ("BankCardsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<BankCardsIfModel>(){}.getType();
    }
    
    if ("BankCardsIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<BankCardsIfModelData>(){}.getType();
    }
    
    if ("BanksIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<BanksIfModel>(){}.getType();
    }
    
    if ("BanksIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<BanksIfModelData>(){}.getType();
    }
    
    if ("BindBankCardSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<BindBankCardSuccessModel>(){}.getType();
    }
    
    if ("BindBankCardSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<BindBankCardSuccessModelData>(){}.getType();
    }
    
    if ("CategoriesIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<CategoriesIfModel>(){}.getType();
    }
    
    if ("CategoryModel".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryModel>(){}.getType();
    }
    
    if ("ChatMsgModel".equalsIgnoreCase(className)) {
      return new TypeToken<ChatMsgModel>(){}.getType();
    }
    
    if ("ChatMsgsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<ChatMsgsListModel>(){}.getType();
    }
    
    if ("ChatMsgsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ChatMsgsListModelData>(){}.getType();
    }
    
    if ("CollectionStoreModel".equalsIgnoreCase(className)) {
      return new TypeToken<CollectionStoreModel>(){}.getType();
    }
    
    if ("CollectionStoresListModel".equalsIgnoreCase(className)) {
      return new TypeToken<CollectionStoresListModel>(){}.getType();
    }
    
    if ("CollectionStoresListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<CollectionStoresListModelData>(){}.getType();
    }
    
    if ("CommentModel".equalsIgnoreCase(className)) {
      return new TypeToken<CommentModel>(){}.getType();
    }
    
    if ("CommentReplyModel".equalsIgnoreCase(className)) {
      return new TypeToken<CommentReplyModel>(){}.getType();
    }
    
    if ("CommentSuccessIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<CommentSuccessIfModel>(){}.getType();
    }
    
    if ("CommentsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<CommentsListModel>(){}.getType();
    }
    
    if ("CommentsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<CommentsListModelData>(){}.getType();
    }
    
    if ("CompletingWordsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<CompletingWordsIfModel>(){}.getType();
    }
    
    if ("CompletingWordsIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<CompletingWordsIfModelData>(){}.getType();
    }
    
    if ("CountryShippingBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<CountryShippingBriefModel>(){}.getType();
    }
    
    if ("CountryShippingListModel".equalsIgnoreCase(className)) {
      return new TypeToken<CountryShippingListModel>(){}.getType();
    }
    
    if ("CouponModel".equalsIgnoreCase(className)) {
      return new TypeToken<CouponModel>(){}.getType();
    }
    
    if ("CreditCardModel".equalsIgnoreCase(className)) {
      return new TypeToken<CreditCardModel>(){}.getType();
    }
    
    if ("CurrenciesIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<CurrenciesIfModel>(){}.getType();
    }
    
    if ("CurrenciesIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<CurrenciesIfModelData>(){}.getType();
    }
    
    if ("DealBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealBriefModel>(){}.getType();
    }
    
    if ("DealCategoriesModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealCategoriesModel>(){}.getType();
    }
    
    if ("DealCategoryModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealCategoryModel>(){}.getType();
    }
    
    if ("DealDailiesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealDailiesListModel>(){}.getType();
    }
    
    if ("DealDailiesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<DealDailiesListModelData>(){}.getType();
    }
    
    if ("DealDailyModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealDailyModel>(){}.getType();
    }
    
    if ("DealDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealDetailModel>(){}.getType();
    }
    
    if ("DealDetailModelData".equalsIgnoreCase(className)) {
      return new TypeToken<DealDetailModelData>(){}.getType();
    }
    
    if ("DealDetailModelDataRecommendedTopics".equalsIgnoreCase(className)) {
      return new TypeToken<DealDetailModelDataRecommendedTopics>(){}.getType();
    }
    
    if ("DealDetailModelDataStoreInfo".equalsIgnoreCase(className)) {
      return new TypeToken<DealDetailModelDataStoreInfo>(){}.getType();
    }
    
    if ("DealExtraIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealExtraIfModel>(){}.getType();
    }
    
    if ("DealExtraModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealExtraModel>(){}.getType();
    }
    
    if ("DealIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealIndexModel>(){}.getType();
    }
    
    if ("DealIndexModelData".equalsIgnoreCase(className)) {
      return new TypeToken<DealIndexModelData>(){}.getType();
    }
    
    if ("DealIndexModelDataTodayTalkTopic".equalsIgnoreCase(className)) {
      return new TypeToken<DealIndexModelDataTodayTalkTopic>(){}.getType();
    }
    
    if ("DealJumpingPageModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealJumpingPageModel>(){}.getType();
    }
    
    if ("DealModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealModel>(){}.getType();
    }
    
    if ("DealPublicityIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealPublicityIfModel>(){}.getType();
    }
    
    if ("DealPublicityIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<DealPublicityIfModelData>(){}.getType();
    }
    
    if ("DealsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealsListModel>(){}.getType();
    }
    
    if ("DealsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<DealsListModelData>(){}.getType();
    }
    
    if ("DealsListWithAdsModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealsListWithAdsModel>(){}.getType();
    }
    
    if ("DealsListWithAdsModelData".equalsIgnoreCase(className)) {
      return new TypeToken<DealsListWithAdsModelData>(){}.getType();
    }
    
    if ("DealsModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealsModel>(){}.getType();
    }
    
    if ("DealsWithAdsModel".equalsIgnoreCase(className)) {
      return new TypeToken<DealsWithAdsModel>(){}.getType();
    }
    
    if ("EnteredStoreModel".equalsIgnoreCase(className)) {
      return new TypeToken<EnteredStoreModel>(){}.getType();
    }
    
    if ("EnteredStoresListModel".equalsIgnoreCase(className)) {
      return new TypeToken<EnteredStoresListModel>(){}.getType();
    }
    
    if ("EnteredStoresListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<EnteredStoresListModelData>(){}.getType();
    }
    
    if ("ErrorModel".equalsIgnoreCase(className)) {
      return new TypeToken<ErrorModel>(){}.getType();
    }
    
    if ("ErrorWithActionTokenModel".equalsIgnoreCase(className)) {
      return new TypeToken<ErrorWithActionTokenModel>(){}.getType();
    }
    
    if ("ErrorWithActionTokenModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ErrorWithActionTokenModelData>(){}.getType();
    }
    
    if ("ExchangeRateIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<ExchangeRateIfModel>(){}.getType();
    }
    
    if ("ExchangeRateIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ExchangeRateIfModelData>(){}.getType();
    }
    
    if ("ExchangeRateModel".equalsIgnoreCase(className)) {
      return new TypeToken<ExchangeRateModel>(){}.getType();
    }
    
    if ("ExchangesRatesIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<ExchangesRatesIfModel>(){}.getType();
    }
    
    if ("ExchangesRatesIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ExchangesRatesIfModelData>(){}.getType();
    }
    
    if ("FollowingDealModel".equalsIgnoreCase(className)) {
      return new TypeToken<FollowingDealModel>(){}.getType();
    }
    
    if ("FollowingDealsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<FollowingDealsListModel>(){}.getType();
    }
    
    if ("FollowingDealsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<FollowingDealsListModelData>(){}.getType();
    }
    
    if ("ForumBoardIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumBoardIndexModel>(){}.getType();
    }
    
    if ("ForumBoardIndexModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ForumBoardIndexModelData>(){}.getType();
    }
    
    if ("ForumBoardModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumBoardModel>(){}.getType();
    }
    
    if ("ForumBoardTopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumBoardTopicsListModel>(){}.getType();
    }
    
    if ("ForumBoardsIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumBoardsIndexModel>(){}.getType();
    }
    
    if ("ForumBoardsIndexModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ForumBoardsIndexModelData>(){}.getType();
    }
    
    if ("ForumBoardsModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumBoardsModel>(){}.getType();
    }
    
    if ("ForumIndexBoardModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumIndexBoardModel>(){}.getType();
    }
    
    if ("ForumIndexFollowedModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumIndexFollowedModel>(){}.getType();
    }
    
    if ("ForumIndexFollowedModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ForumIndexFollowedModelData>(){}.getType();
    }
    
    if ("ForumIndexHotTopicsModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumIndexHotTopicsModel>(){}.getType();
    }
    
    if ("ForumIndexHotTopicsModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ForumIndexHotTopicsModelData>(){}.getType();
    }
    
    if ("ForumIndexShowOrdersModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumIndexShowOrdersModel>(){}.getType();
    }
    
    if ("ForumIndexShowOrdersModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ForumIndexShowOrdersModelData>(){}.getType();
    }
    
    if ("ForumSectionModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumSectionModel>(){}.getType();
    }
    
    if ("ForumSubBoardModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumSubBoardModel>(){}.getType();
    }
    
    if ("ForumTalentsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumTalentsListModel>(){}.getType();
    }
    
    if ("ForumTalentsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ForumTalentsListModelData>(){}.getType();
    }
    
    if ("ForumTopicBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumTopicBriefModel>(){}.getType();
    }
    
    if ("ForumTopicBriefModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ForumTopicBriefModelData>(){}.getType();
    }
    
    if ("ForumTopicViewModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumTopicViewModel>(){}.getType();
    }
    
    if ("ForumTopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumTopicsListModel>(){}.getType();
    }
    
    if ("ForumUserIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumUserIndexModel>(){}.getType();
    }
    
    if ("ForumUserIndexModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ForumUserIndexModelData>(){}.getType();
    }
    
    if ("ForumUserInfoModel".equalsIgnoreCase(className)) {
      return new TypeToken<ForumUserInfoModel>(){}.getType();
    }
    
    if ("FriendModel".equalsIgnoreCase(className)) {
      return new TypeToken<FriendModel>(){}.getType();
    }
    
    if ("FriendsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<FriendsListModel>(){}.getType();
    }
    
    if ("FriendsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<FriendsListModelData>(){}.getType();
    }
    
    if ("FriendsRequestionsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<FriendsRequestionsListModel>(){}.getType();
    }
    
    if ("FriendsRequestionsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<FriendsRequestionsListModelData>(){}.getType();
    }
    
    if ("FriendsRequestionsListModelDataRows".equalsIgnoreCase(className)) {
      return new TypeToken<FriendsRequestionsListModelDataRows>(){}.getType();
    }
    
    if ("FriendsSectionsModel".equalsIgnoreCase(className)) {
      return new TypeToken<FriendsSectionsModel>(){}.getType();
    }
    
    if ("FriendsSectionsModelData".equalsIgnoreCase(className)) {
      return new TypeToken<FriendsSectionsModelData>(){}.getType();
    }
    
    if ("GeetestParamsModel".equalsIgnoreCase(className)) {
      return new TypeToken<GeetestParamsModel>(){}.getType();
    }
    
    if ("GeetestParamsModelData".equalsIgnoreCase(className)) {
      return new TypeToken<GeetestParamsModelData>(){}.getType();
    }
    
    if ("HotGoodsModel".equalsIgnoreCase(className)) {
      return new TypeToken<HotGoodsModel>(){}.getType();
    }
    
    if ("IfFilterModel".equalsIgnoreCase(className)) {
      return new TypeToken<IfFilterModel>(){}.getType();
    }
    
    if ("IfFilterModelValues".equalsIgnoreCase(className)) {
      return new TypeToken<IfFilterModelValues>(){}.getType();
    }
    
    if ("In24hDealsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<In24hDealsListModel>(){}.getType();
    }
    
    if ("In24hDealsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<In24hDealsListModelData>(){}.getType();
    }
    
    if ("In24hDealsListModelDataCategories".equalsIgnoreCase(className)) {
      return new TypeToken<In24hDealsListModelDataCategories>(){}.getType();
    }
    
    if ("InviteIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<InviteIfModel>(){}.getType();
    }
    
    if ("InviteIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<InviteIfModelData>(){}.getType();
    }
    
    if ("InvitedFriendModel".equalsIgnoreCase(className)) {
      return new TypeToken<InvitedFriendModel>(){}.getType();
    }
    
    if ("InvitedFriendsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<InvitedFriendsListModel>(){}.getType();
    }
    
    if ("InvitedFriendsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<InvitedFriendsListModelData>(){}.getType();
    }
    
    if ("InviterModel".equalsIgnoreCase(className)) {
      return new TypeToken<InviterModel>(){}.getType();
    }
    
    if ("InvitersListModel".equalsIgnoreCase(className)) {
      return new TypeToken<InvitersListModel>(){}.getType();
    }
    
    if ("InvitersListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<InvitersListModelData>(){}.getType();
    }
    
    if ("KeywordsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<KeywordsIfModel>(){}.getType();
    }
    
    if ("LinkGeneratorModel".equalsIgnoreCase(className)) {
      return new TypeToken<LinkGeneratorModel>(){}.getType();
    }
    
    if ("LinkGeneratorModelData".equalsIgnoreCase(className)) {
      return new TypeToken<LinkGeneratorModelData>(){}.getType();
    }
    
    if ("LinkWidgetModel".equalsIgnoreCase(className)) {
      return new TypeToken<LinkWidgetModel>(){}.getType();
    }
    
    if ("LoginSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<LoginSuccessModel>(){}.getType();
    }
    
    if ("LoginSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<LoginSuccessModelData>(){}.getType();
    }
    
    if ("MsgNoticeModel".equalsIgnoreCase(className)) {
      return new TypeToken<MsgNoticeModel>(){}.getType();
    }
    
    if ("MsgNoticesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<MsgNoticesListModel>(){}.getType();
    }
    
    if ("MsgNoticesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<MsgNoticesListModelData>(){}.getType();
    }
    
    if ("MsgsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<MsgsListModel>(){}.getType();
    }
    
    if ("MsgsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<MsgsListModelData>(){}.getType();
    }
    
    if ("MsgsListModelDataRows".equalsIgnoreCase(className)) {
      return new TypeToken<MsgsListModelDataRows>(){}.getType();
    }
    
    if ("MyRepliesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<MyRepliesListModel>(){}.getType();
    }
    
    if ("MyRepliesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<MyRepliesListModelData>(){}.getType();
    }
    
    if ("MyReplyModel".equalsIgnoreCase(className)) {
      return new TypeToken<MyReplyModel>(){}.getType();
    }
    
    if ("MyReplyModelSource".equalsIgnoreCase(className)) {
      return new TypeToken<MyReplyModelSource>(){}.getType();
    }
    
    if ("OfflineStoreAddressIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<OfflineStoreAddressIfModel>(){}.getType();
    }
    
    if ("OfflineStoreAddressListModel".equalsIgnoreCase(className)) {
      return new TypeToken<OfflineStoreAddressListModel>(){}.getType();
    }
    
    if ("OfflineStoreAddressListModelLists".equalsIgnoreCase(className)) {
      return new TypeToken<OfflineStoreAddressListModelLists>(){}.getType();
    }
    
    if ("OfflineStoreAddressListModelLists1".equalsIgnoreCase(className)) {
      return new TypeToken<OfflineStoreAddressListModelLists1>(){}.getType();
    }
    
    if ("OfflineStoreAddressListModelLists2".equalsIgnoreCase(className)) {
      return new TypeToken<OfflineStoreAddressListModelLists2>(){}.getType();
    }
    
    if ("OfflineStoreDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<OfflineStoreDetailIfModel>(){}.getType();
    }
    
    if ("OfflineStoreDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<OfflineStoreDetailModel>(){}.getType();
    }
    
    if ("OrderBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBriefModel>(){}.getType();
    }
    
    if ("OrderDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDetailIfModel>(){}.getType();
    }
    
    if ("OrderDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDetailModel>(){}.getType();
    }
    
    if ("OrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<OrderModel>(){}.getType();
    }
    
    if ("OrdersBriefsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersBriefsListModel>(){}.getType();
    }
    
    if ("OrdersBriefsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersBriefsListModelData>(){}.getType();
    }
    
    if ("OrdersListModel".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersListModel>(){}.getType();
    }
    
    if ("OrdersListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersListModelData>(){}.getType();
    }
    
    if ("PopupAdModel".equalsIgnoreCase(className)) {
      return new TypeToken<PopupAdModel>(){}.getType();
    }
    
    if ("PostDynamicsMsgsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<PostDynamicsMsgsListModel>(){}.getType();
    }
    
    if ("PostDynamicsMsgsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<PostDynamicsMsgsListModelData>(){}.getType();
    }
    
    if ("PostDynamicsMsgsListModelDataQuotation".equalsIgnoreCase(className)) {
      return new TypeToken<PostDynamicsMsgsListModelDataQuotation>(){}.getType();
    }
    
    if ("PostDynamicsMsgsListModelDataRows".equalsIgnoreCase(className)) {
      return new TypeToken<PostDynamicsMsgsListModelDataRows>(){}.getType();
    }
    
    if ("ProvinceModel".equalsIgnoreCase(className)) {
      return new TypeToken<ProvinceModel>(){}.getType();
    }
    
    if ("ProvincesIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<ProvincesIfModel>(){}.getType();
    }
    
    if ("ReachedStoreIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<ReachedStoreIfModel>(){}.getType();
    }
    
    if ("ReachedStoreIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ReachedStoreIfModelData>(){}.getType();
    }
    
    if ("RebateDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<RebateDetailIfModel>(){}.getType();
    }
    
    if ("RebateDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<RebateDetailModel>(){}.getType();
    }
    
    if ("RebateMissedOrderDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<RebateMissedOrderDetailIfModel>(){}.getType();
    }
    
    if ("RebateMissedOrderDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<RebateMissedOrderDetailModel>(){}.getType();
    }
    
    if ("RebateMissedOrderModel".equalsIgnoreCase(className)) {
      return new TypeToken<RebateMissedOrderModel>(){}.getType();
    }
    
    if ("RebateMissedOrdersListModel".equalsIgnoreCase(className)) {
      return new TypeToken<RebateMissedOrdersListModel>(){}.getType();
    }
    
    if ("RebateMissedOrdersListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<RebateMissedOrdersListModelData>(){}.getType();
    }
    
    if ("RebateModel".equalsIgnoreCase(className)) {
      return new TypeToken<RebateModel>(){}.getType();
    }
    
    if ("RebatesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<RebatesListModel>(){}.getType();
    }
    
    if ("RebatesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<RebatesListModelData>(){}.getType();
    }
    
    if ("RegionModel".equalsIgnoreCase(className)) {
      return new TypeToken<RegionModel>(){}.getType();
    }
    
    if ("RegionsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<RegionsIfModel>(){}.getType();
    }
    
    if ("RepliesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<RepliesListModel>(){}.getType();
    }
    
    if ("RepliesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<RepliesListModelData>(){}.getType();
    }
    
    if ("ReplyModel".equalsIgnoreCase(className)) {
      return new TypeToken<ReplyModel>(){}.getType();
    }
    
    if ("ReplyModelQuotation".equalsIgnoreCase(className)) {
      return new TypeToken<ReplyModelQuotation>(){}.getType();
    }
    
    if ("SearchingBoardsModel".equalsIgnoreCase(className)) {
      return new TypeToken<SearchingBoardsModel>(){}.getType();
    }
    
    if ("SearchingForumBoardTopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<SearchingForumBoardTopicsListModel>(){}.getType();
    }
    
    if ("SendMsgSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<SendMsgSuccessModel>(){}.getType();
    }
    
    if ("SendMsgSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<SendMsgSuccessModelData>(){}.getType();
    }
    
    if ("ShippingCountryBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<ShippingCountryBriefModel>(){}.getType();
    }
    
    if ("ShippingCountryListModel".equalsIgnoreCase(className)) {
      return new TypeToken<ShippingCountryListModel>(){}.getType();
    }
    
    if ("ShoppingJumpingPageIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<ShoppingJumpingPageIfModel>(){}.getType();
    }
    
    if ("ShoppingJumpingPageModel".equalsIgnoreCase(className)) {
      return new TypeToken<ShoppingJumpingPageModel>(){}.getType();
    }
    
    if ("ShoppingJumpingPageModelDealInfo".equalsIgnoreCase(className)) {
      return new TypeToken<ShoppingJumpingPageModelDealInfo>(){}.getType();
    }
    
    if ("ShowImgVerifyModel".equalsIgnoreCase(className)) {
      return new TypeToken<ShowImgVerifyModel>(){}.getType();
    }
    
    if ("ShowImgVerifyModelData".equalsIgnoreCase(className)) {
      return new TypeToken<ShowImgVerifyModelData>(){}.getType();
    }
    
    if ("SigningInSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<SigningInSuccessModel>(){}.getType();
    }
    
    if ("SingedInInfoModel".equalsIgnoreCase(className)) {
      return new TypeToken<SingedInInfoModel>(){}.getType();
    }
    
    if ("SingedInInfoModelData".equalsIgnoreCase(className)) {
      return new TypeToken<SingedInInfoModelData>(){}.getType();
    }
    
    if ("SingedInInfoModelDataCalendar".equalsIgnoreCase(className)) {
      return new TypeToken<SingedInInfoModelDataCalendar>(){}.getType();
    }
    
    if ("SlidePicModel".equalsIgnoreCase(className)) {
      return new TypeToken<SlidePicModel>(){}.getType();
    }
    
    if ("SpiderDealIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<SpiderDealIfModel>(){}.getType();
    }
    
    if ("SpiderDealModel".equalsIgnoreCase(className)) {
      return new TypeToken<SpiderDealModel>(){}.getType();
    }
    
    if ("SpiderDealModelOptions".equalsIgnoreCase(className)) {
      return new TypeToken<SpiderDealModelOptions>(){}.getType();
    }
    
    if ("SpiderDealModelPropertiesList".equalsIgnoreCase(className)) {
      return new TypeToken<SpiderDealModelPropertiesList>(){}.getType();
    }
    
    if ("SpiderDealModelSkuList".equalsIgnoreCase(className)) {
      return new TypeToken<SpiderDealModelSkuList>(){}.getType();
    }
    
    if ("SquiredModel".equalsIgnoreCase(className)) {
      return new TypeToken<SquiredModel>(){}.getType();
    }
    
    if ("SquiredModelLists".equalsIgnoreCase(className)) {
      return new TypeToken<SquiredModelLists>(){}.getType();
    }
    
    if ("StaticsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<StaticsIfModel>(){}.getType();
    }
    
    if ("StaticsIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<StaticsIfModelData>(){}.getType();
    }
    
    if ("StoreBriefListModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoreBriefListModel>(){}.getType();
    }
    
    if ("StoreBriefListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<StoreBriefListModelData>(){}.getType();
    }
    
    if ("StoreBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoreBriefModel>(){}.getType();
    }
    
    if ("StoreCategoryBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoreCategoryBriefModel>(){}.getType();
    }
    
    if ("StoreCategoryListModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoreCategoryListModel>(){}.getType();
    }
    
    if ("StoreDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoreDetailIfModel>(){}.getType();
    }
    
    if ("StoreDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoreDetailModel>(){}.getType();
    }
    
    if ("StoreHotGoodsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoreHotGoodsListModel>(){}.getType();
    }
    
    if ("StoreHotGoodsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<StoreHotGoodsListModelData>(){}.getType();
    }
    
    if ("StoreIndexIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoreIndexIfModel>(){}.getType();
    }
    
    if ("StoreIndexIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<StoreIndexIfModelData>(){}.getType();
    }
    
    if ("StoreIndexIfModelDataAreasBriefs".equalsIgnoreCase(className)) {
      return new TypeToken<StoreIndexIfModelDataAreasBriefs>(){}.getType();
    }
    
    if ("StoreIndexIfModelDataSuperRebate".equalsIgnoreCase(className)) {
      return new TypeToken<StoreIndexIfModelDataSuperRebate>(){}.getType();
    }
    
    if ("StoreModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoreModel>(){}.getType();
    }
    
    if ("StoreProxyInfoIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoreProxyInfoIfModel>(){}.getType();
    }
    
    if ("StoreProxyInfoIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<StoreProxyInfoIfModelData>(){}.getType();
    }
    
    if ("StoreWithDealsModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoreWithDealsModel>(){}.getType();
    }
    
    if ("StoreWithDealsModelDeals".equalsIgnoreCase(className)) {
      return new TypeToken<StoreWithDealsModelDeals>(){}.getType();
    }
    
    if ("StoresBriefsIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoresBriefsIfModel>(){}.getType();
    }
    
    if ("StoresBriefsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoresBriefsListModel>(){}.getType();
    }
    
    if ("StoresListModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoresListModel>(){}.getType();
    }
    
    if ("StoresListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<StoresListModelData>(){}.getType();
    }
    
    if ("StoresRecordsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoresRecordsListModel>(){}.getType();
    }
    
    if ("StoresRecordsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<StoresRecordsListModelData>(){}.getType();
    }
    
    if ("StoresRecordsSection".equalsIgnoreCase(className)) {
      return new TypeToken<StoresRecordsSection>(){}.getType();
    }
    
    if ("StoresRecordsSectionsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoresRecordsSectionsListModel>(){}.getType();
    }
    
    if ("StoresRecordsSectionsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<StoresRecordsSectionsListModelData>(){}.getType();
    }
    
    if ("StoresWithDealsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<StoresWithDealsListModel>(){}.getType();
    }
    
    if ("StoresWithDealsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<StoresWithDealsListModelData>(){}.getType();
    }
    
    if ("SuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<SuccessModel>(){}.getType();
    }
    
    if ("SuccessWithStringModel".equalsIgnoreCase(className)) {
      return new TypeToken<SuccessWithStringModel>(){}.getType();
    }
    
    if ("SystemSettingsModel".equalsIgnoreCase(className)) {
      return new TypeToken<SystemSettingsModel>(){}.getType();
    }
    
    if ("SystemSettingsModelData".equalsIgnoreCase(className)) {
      return new TypeToken<SystemSettingsModelData>(){}.getType();
    }
    
    if ("SystemSettingsModelDataActivity".equalsIgnoreCase(className)) {
      return new TypeToken<SystemSettingsModelDataActivity>(){}.getType();
    }
    
    if ("SystemSettingsModelDataTemplateInfo".equalsIgnoreCase(className)) {
      return new TypeToken<SystemSettingsModelDataTemplateInfo>(){}.getType();
    }
    
    if ("TagBrief".equalsIgnoreCase(className)) {
      return new TypeToken<TagBrief>(){}.getType();
    }
    
    if ("TagModel".equalsIgnoreCase(className)) {
      return new TypeToken<TagModel>(){}.getType();
    }
    
    if ("TagRelatedDealsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<TagRelatedDealsListModel>(){}.getType();
    }
    
    if ("TagRelatedDealsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<TagRelatedDealsListModelData>(){}.getType();
    }
    
    if ("TagsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<TagsListModel>(){}.getType();
    }
    
    if ("TagsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<TagsListModelData>(){}.getType();
    }
    
    if ("TalentModel".equalsIgnoreCase(className)) {
      return new TypeToken<TalentModel>(){}.getType();
    }
    
    if ("TalentsIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<TalentsIndexModel>(){}.getType();
    }
    
    if ("TalentsIndexModelData".equalsIgnoreCase(className)) {
      return new TypeToken<TalentsIndexModelData>(){}.getType();
    }
    
    if ("TalentsIndexModelDataTalentCategories".equalsIgnoreCase(className)) {
      return new TypeToken<TalentsIndexModelDataTalentCategories>(){}.getType();
    }
    
    if ("TalkTopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<TalkTopicsListModel>(){}.getType();
    }
    
    if ("TalkTopicsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<TalkTopicsListModelData>(){}.getType();
    }
    
    if ("ThirdPartyPlatformModel".equalsIgnoreCase(className)) {
      return new TypeToken<ThirdPartyPlatformModel>(){}.getType();
    }
    
    if ("ThirdPartyPlatformsModel".equalsIgnoreCase(className)) {
      return new TypeToken<ThirdPartyPlatformsModel>(){}.getType();
    }
    
    if ("TopicBriefModel".equalsIgnoreCase(className)) {
      return new TypeToken<TopicBriefModel>(){}.getType();
    }
    
    if ("TopicDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<TopicDetailModel>(){}.getType();
    }
    
    if ("TopicModel".equalsIgnoreCase(className)) {
      return new TypeToken<TopicModel>(){}.getType();
    }
    
    if ("TopicModelTags".equalsIgnoreCase(className)) {
      return new TypeToken<TopicModelTags>(){}.getType();
    }
    
    if ("TopicReplyModel".equalsIgnoreCase(className)) {
      return new TypeToken<TopicReplyModel>(){}.getType();
    }
    
    if ("TopicReplyModelSource".equalsIgnoreCase(className)) {
      return new TypeToken<TopicReplyModelSource>(){}.getType();
    }
    
    if ("TopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<TopicsListModel>(){}.getType();
    }
    
    if ("TopicsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<TopicsListModelData>(){}.getType();
    }
    
    if ("TopicsModel".equalsIgnoreCase(className)) {
      return new TypeToken<TopicsModel>(){}.getType();
    }
    
    if ("TopicsRepliesListModel".equalsIgnoreCase(className)) {
      return new TypeToken<TopicsRepliesListModel>(){}.getType();
    }
    
    if ("TopicsRepliesListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<TopicsRepliesListModelData>(){}.getType();
    }
    
    if ("TransshipperIndexIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<TransshipperIndexIfModel>(){}.getType();
    }
    
    if ("TransshipperIndexIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<TransshipperIndexIfModelData>(){}.getType();
    }
    
    if ("TransshipperIndexIfModelDataTransshippersSections".equalsIgnoreCase(className)) {
      return new TypeToken<TransshipperIndexIfModelDataTransshippersSections>(){}.getType();
    }
    
    if ("TransshipperModel".equalsIgnoreCase(className)) {
      return new TypeToken<TransshipperModel>(){}.getType();
    }
    
    if ("TransshippersListModel".equalsIgnoreCase(className)) {
      return new TypeToken<TransshippersListModel>(){}.getType();
    }
    
    if ("TransshippersListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<TransshippersListModelData>(){}.getType();
    }
    
    if ("UpdateModel".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateModel>(){}.getType();
    }
    
    if ("UpdateModelData".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateModelData>(){}.getType();
    }
    
    if ("UserBriefInfoIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<UserBriefInfoIfModel>(){}.getType();
    }
    
    if ("UserBriefInfoModel".equalsIgnoreCase(className)) {
      return new TypeToken<UserBriefInfoModel>(){}.getType();
    }
    
    if ("UserCollectionForumBoardsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<UserCollectionForumBoardsListModel>(){}.getType();
    }
    
    if ("UserCollectionForumBoardsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<UserCollectionForumBoardsListModelData>(){}.getType();
    }
    
    if ("UserCollectionForumTopicsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<UserCollectionForumTopicsListModel>(){}.getType();
    }
    
    if ("UserInfoIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<UserInfoIfModel>(){}.getType();
    }
    
    if ("UserInfoModel".equalsIgnoreCase(className)) {
      return new TypeToken<UserInfoModel>(){}.getType();
    }
    
    if ("UserInfoModelRegion".equalsIgnoreCase(className)) {
      return new TypeToken<UserInfoModelRegion>(){}.getType();
    }
    
    if ("UserInfoQuickViewIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<UserInfoQuickViewIfModel>(){}.getType();
    }
    
    if ("UserInfoQuickViewIfModelData".equalsIgnoreCase(className)) {
      return new TypeToken<UserInfoQuickViewIfModelData>(){}.getType();
    }
    
    if ("UserWithdrawingIndexIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<UserWithdrawingIndexIfModel>(){}.getType();
    }
    
    if ("UserWithdrawingIndexModel".equalsIgnoreCase(className)) {
      return new TypeToken<UserWithdrawingIndexModel>(){}.getType();
    }
    
    if ("UserWithdrawingModeModel".equalsIgnoreCase(className)) {
      return new TypeToken<UserWithdrawingModeModel>(){}.getType();
    }
    
    if ("UserWithdrawingModesModel".equalsIgnoreCase(className)) {
      return new TypeToken<UserWithdrawingModesModel>(){}.getType();
    }
    
    if ("VipRebateStoreModel".equalsIgnoreCase(className)) {
      return new TypeToken<VipRebateStoreModel>(){}.getType();
    }
    
    if ("VipRebateStoresListModel".equalsIgnoreCase(className)) {
      return new TypeToken<VipRebateStoresListModel>(){}.getType();
    }
    
    if ("VipRebateStoresListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<VipRebateStoresListModelData>(){}.getType();
    }
    
    if ("VisitedStoreRecordModel".equalsIgnoreCase(className)) {
      return new TypeToken<VisitedStoreRecordModel>(){}.getType();
    }
    
    if ("WithDrawingRecordsListModel".equalsIgnoreCase(className)) {
      return new TypeToken<WithDrawingRecordsListModel>(){}.getType();
    }
    
    if ("WithDrawingRecordsListModelData".equalsIgnoreCase(className)) {
      return new TypeToken<WithDrawingRecordsListModelData>(){}.getType();
    }
    
    if ("WithdrawingModeModel".equalsIgnoreCase(className)) {
      return new TypeToken<WithdrawingModeModel>(){}.getType();
    }
    
    if ("WithdrawingModesModel".equalsIgnoreCase(className)) {
      return new TypeToken<WithdrawingModesModel>(){}.getType();
    }
    
    if ("WithdrawingModesModelData".equalsIgnoreCase(className)) {
      return new TypeToken<WithdrawingModesModelData>(){}.getType();
    }
    
    if ("WithdrawingRecordDetailIfModel".equalsIgnoreCase(className)) {
      return new TypeToken<WithdrawingRecordDetailIfModel>(){}.getType();
    }
    
    if ("WithdrawingRecordDetailModel".equalsIgnoreCase(className)) {
      return new TypeToken<WithdrawingRecordDetailModel>(){}.getType();
    }
    
    if ("WithdrawingRecordModel".equalsIgnoreCase(className)) {
      return new TypeToken<WithdrawingRecordModel>(){}.getType();
    }
    
    if ("WithdrawingSuccessModel".equalsIgnoreCase(className)) {
      return new TypeToken<WithdrawingSuccessModel>(){}.getType();
    }
    
    if ("WithdrawingSuccessModelData".equalsIgnoreCase(className)) {
      return new TypeToken<WithdrawingSuccessModelData>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
