/**
 * 五五海淘返利APP新版接口
 * 更新日志<br> 相对于上一build的变更： <br/>Nu 调整搜索模型 
 *
 * OpenAPI spec version: 1.8 build20180202-2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class MsgNoticeModel  {
  
  @SerializedName("notice_title")
  private String noticeTitle = null;
  @SerializedName("notice_summary")
  private String noticeSummary = null;
  @SerializedName("notice_type")
  private String noticeType = null;
  @SerializedName("data_id")
  private String dataId = null;
  @SerializedName("user_id")
  private String userId = null;
  @SerializedName("is_friend")
  private String isFriend = null;
  @SerializedName("last_activity_time")
  private String lastActivityTime = null;
  @SerializedName("notice_icon")
  private String noticeIcon = null;
  @SerializedName("new_notices_count")
  private String newNoticesCount = null;

  /**
   * 通知标题
   **/
  @ApiModelProperty(value = "通知标题")
  public String getNoticeTitle() {
    return noticeTitle;
  }
  public void setNoticeTitle(String noticeTitle) {
    this.noticeTitle = noticeTitle;
  }

  /**
   * 通知摘要
   **/
  @ApiModelProperty(value = "通知摘要")
  public String getNoticeSummary() {
    return noticeSummary;
  }
  public void setNoticeSummary(String noticeSummary) {
    this.noticeSummary = noticeSummary;
  }

  /**
   * 通知类型 - 1：系统提醒 2：帖子动态 3：好友申请 4：优惠推荐 5：用户会话
   **/
  @ApiModelProperty(value = "通知类型 - 1：系统提醒 2：帖子动态 3：好友申请 4：优惠推荐 5：用户会话")
  public String getNoticeType() {
    return noticeType;
  }
  public void setNoticeType(String noticeType) {
    this.noticeType = noticeType;
  }

  /**
   * 关联的数据ID 当notice_type为5时此ID是plid
   **/
  @ApiModelProperty(value = "关联的数据ID 当notice_type为5时此ID是plid")
  public String getDataId() {
    return dataId;
  }
  public void setDataId(String dataId) {
    this.dataId = dataId;
  }

  /**
   * 用户ID
   **/
  @ApiModelProperty(value = "用户ID")
  public String getUserId() {
    return userId;
  }
  public void setUserId(String userId) {
    this.userId = userId;
  }

  /**
   * 是否是好友 - 0：不是好友 1：已是好友 2：自己 3:已向对方发送过好友请求 4：对方请求添加我为好友 notice_type不等于5时显示空字符串
   **/
  @ApiModelProperty(value = "是否是好友 - 0：不是好友 1：已是好友 2：自己 3:已向对方发送过好友请求 4：对方请求添加我为好友 notice_type不等于5时显示空字符串")
  public String getIsFriend() {
    return isFriend;
  }
  public void setIsFriend(String isFriend) {
    this.isFriend = isFriend;
  }

  /**
   * 最后更新时间
   **/
  @ApiModelProperty(value = "最后更新时间")
  public String getLastActivityTime() {
    return lastActivityTime;
  }
  public void setLastActivityTime(String lastActivityTime) {
    this.lastActivityTime = lastActivityTime;
  }

  /**
   * 通知图标
   **/
  @ApiModelProperty(value = "通知图标")
  public String getNoticeIcon() {
    return noticeIcon;
  }
  public void setNoticeIcon(String noticeIcon) {
    this.noticeIcon = noticeIcon;
  }

  /**
   * 新通知数量
   **/
  @ApiModelProperty(value = "新通知数量")
  public String getNewNoticesCount() {
    return newNoticesCount;
  }
  public void setNewNoticesCount(String newNoticesCount) {
    this.newNoticesCount = newNoticesCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MsgNoticeModel msgNoticeModel = (MsgNoticeModel) o;
    return (noticeTitle == null ? msgNoticeModel.noticeTitle == null : noticeTitle.equals(msgNoticeModel.noticeTitle)) &&
        (noticeSummary == null ? msgNoticeModel.noticeSummary == null : noticeSummary.equals(msgNoticeModel.noticeSummary)) &&
        (noticeType == null ? msgNoticeModel.noticeType == null : noticeType.equals(msgNoticeModel.noticeType)) &&
        (dataId == null ? msgNoticeModel.dataId == null : dataId.equals(msgNoticeModel.dataId)) &&
        (userId == null ? msgNoticeModel.userId == null : userId.equals(msgNoticeModel.userId)) &&
        (isFriend == null ? msgNoticeModel.isFriend == null : isFriend.equals(msgNoticeModel.isFriend)) &&
        (lastActivityTime == null ? msgNoticeModel.lastActivityTime == null : lastActivityTime.equals(msgNoticeModel.lastActivityTime)) &&
        (noticeIcon == null ? msgNoticeModel.noticeIcon == null : noticeIcon.equals(msgNoticeModel.noticeIcon)) &&
        (newNoticesCount == null ? msgNoticeModel.newNoticesCount == null : newNoticesCount.equals(msgNoticeModel.newNoticesCount));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (noticeTitle == null ? 0: noticeTitle.hashCode());
    result = 31 * result + (noticeSummary == null ? 0: noticeSummary.hashCode());
    result = 31 * result + (noticeType == null ? 0: noticeType.hashCode());
    result = 31 * result + (dataId == null ? 0: dataId.hashCode());
    result = 31 * result + (userId == null ? 0: userId.hashCode());
    result = 31 * result + (isFriend == null ? 0: isFriend.hashCode());
    result = 31 * result + (lastActivityTime == null ? 0: lastActivityTime.hashCode());
    result = 31 * result + (noticeIcon == null ? 0: noticeIcon.hashCode());
    result = 31 * result + (newNoticesCount == null ? 0: newNoticesCount.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class MsgNoticeModel {\n");
    
    sb.append("  noticeTitle: ").append(noticeTitle).append("\n");
    sb.append("  noticeSummary: ").append(noticeSummary).append("\n");
    sb.append("  noticeType: ").append(noticeType).append("\n");
    sb.append("  dataId: ").append(dataId).append("\n");
    sb.append("  userId: ").append(userId).append("\n");
    sb.append("  isFriend: ").append(isFriend).append("\n");
    sb.append("  lastActivityTime: ").append(lastActivityTime).append("\n");
    sb.append("  noticeIcon: ").append(noticeIcon).append("\n");
    sb.append("  newNoticesCount: ").append(newNoticesCount).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
