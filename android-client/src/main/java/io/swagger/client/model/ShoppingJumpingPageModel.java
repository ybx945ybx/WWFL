/**
 * 五五海淘返利APP新版接口
 * 更新日志<br> 相对于上一build的变更： <br/>Nu 调整搜索模型 
 *
 * OpenAPI spec version: 1.8 build20180202-2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.ShoppingJumpingPageModelDealInfo;
import java.util.*;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


/**
 * 购买跳转页模型
 **/
@ApiModel(description = "购买跳转页模型")
public class ShoppingJumpingPageModel  {
  
  @SerializedName("store_id")
  private String storeId = null;
  @SerializedName("deal_info")
  private ShoppingJumpingPageModelDealInfo dealInfo = null;
  @SerializedName("store_name")
  private String storeName = null;
  @SerializedName("store_description")
  private String storeDescription = null;
  @SerializedName("store_logo")
  private String storeLogo = null;
  @SerializedName("country_flag_pic")
  private String countryFlagPic = null;
  @SerializedName("rebate_view")
  private String rebateView = null;
  @SerializedName("rebate_instruction")
  private String rebateInstruction = null;
  @SerializedName("card_supported")
  private String cardSupported = null;
  @SerializedName("alipay_supported")
  private String alipaySupported = null;
  @SerializedName("paypal_supported")
  private String paypalSupported = null;
  @SerializedName("direct_post_supported")
  private String directPostSupported = null;
  @SerializedName("transshipping_supported")
  private String transshippingSupported = null;
  @SerializedName("mobile_has_rebate")
  private String mobileHasRebate = null;
  @SerializedName("bounded_accessing")
  private String boundedAccessing = null;
  @SerializedName("coupon_codes")
  private List<String> couponCodes = null;
  @SerializedName("is_favorite")
  private String isFavorite = null;
  @SerializedName("publish_time")
  private String publishTime = null;
  @SerializedName("jump_url")
  private String jumpUrl = null;
  @SerializedName("jump_delay")
  private String jumpDelay = null;

  /**
   * 返利商家ID
   **/
  @ApiModelProperty(value = "返利商家ID")
  public String getStoreId() {
    return storeId;
  }
  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ShoppingJumpingPageModelDealInfo getDealInfo() {
    return dealInfo;
  }
  public void setDealInfo(ShoppingJumpingPageModelDealInfo dealInfo) {
    this.dealInfo = dealInfo;
  }

  /**
   * 返利商家图标
   **/
  @ApiModelProperty(value = "返利商家图标")
  public String getStoreName() {
    return storeName;
  }
  public void setStoreName(String storeName) {
    this.storeName = storeName;
  }

  /**
   * 返利商家介绍
   **/
  @ApiModelProperty(value = "返利商家介绍")
  public String getStoreDescription() {
    return storeDescription;
  }
  public void setStoreDescription(String storeDescription) {
    this.storeDescription = storeDescription;
  }

  /**
   * 返利商家图标
   **/
  @ApiModelProperty(value = "返利商家图标")
  public String getStoreLogo() {
    return storeLogo;
  }
  public void setStoreLogo(String storeLogo) {
    this.storeLogo = storeLogo;
  }

  /**
   * 国旗图标
   **/
  @ApiModelProperty(value = "国旗图标")
  public String getCountryFlagPic() {
    return countryFlagPic;
  }
  public void setCountryFlagPic(String countryFlagPic) {
    this.countryFlagPic = countryFlagPic;
  }

  /**
   * 返利比率（文字说明）
   **/
  @ApiModelProperty(value = "返利比率（文字说明）")
  public String getRebateView() {
    return rebateView;
  }
  public void setRebateView(String rebateView) {
    this.rebateView = rebateView;
  }

  /**
   * 返利说明
   **/
  @ApiModelProperty(value = "返利说明")
  public String getRebateInstruction() {
    return rebateInstruction;
  }
  public void setRebateInstruction(String rebateInstruction) {
    this.rebateInstruction = rebateInstruction;
  }

  /**
   * 是否支持双币信用卡
   **/
  @ApiModelProperty(value = "是否支持双币信用卡")
  public String getCardSupported() {
    return cardSupported;
  }
  public void setCardSupported(String cardSupported) {
    this.cardSupported = cardSupported;
  }

  /**
   * 是否支持支付宝
   **/
  @ApiModelProperty(value = "是否支持支付宝")
  public String getAlipaySupported() {
    return alipaySupported;
  }
  public void setAlipaySupported(String alipaySupported) {
    this.alipaySupported = alipaySupported;
  }

  /**
   * 是否支持paypal
   **/
  @ApiModelProperty(value = "是否支持paypal")
  public String getPaypalSupported() {
    return paypalSupported;
  }
  public void setPaypalSupported(String paypalSupported) {
    this.paypalSupported = paypalSupported;
  }

  /**
   * 是否支持直邮中国
   **/
  @ApiModelProperty(value = "是否支持直邮中国")
  public String getDirectPostSupported() {
    return directPostSupported;
  }
  public void setDirectPostSupported(String directPostSupported) {
    this.directPostSupported = directPostSupported;
  }

  /**
   * 是否支持转运
   **/
  @ApiModelProperty(value = "是否支持转运")
  public String getTransshippingSupported() {
    return transshippingSupported;
  }
  public void setTransshippingSupported(String transshippingSupported) {
    this.transshippingSupported = transshippingSupported;
  }

  /**
   * 手机购买是否有返利
   **/
  @ApiModelProperty(value = "手机购买是否有返利")
  public String getMobileHasRebate() {
    return mobileHasRebate;
  }
  public void setMobileHasRebate(String mobileHasRebate) {
    this.mobileHasRebate = mobileHasRebate;
  }

  /**
   * 大陆访问是否受限
   **/
  @ApiModelProperty(value = "大陆访问是否受限")
  public String getBoundedAccessing() {
    return boundedAccessing;
  }
  public void setBoundedAccessing(String boundedAccessing) {
    this.boundedAccessing = boundedAccessing;
  }

  /**
   * 优惠码
   **/
  @ApiModelProperty(value = "优惠码")
  public List<String> getCouponCodes() {
    return couponCodes;
  }
  public void setCouponCodes(List<String> couponCodes) {
    this.couponCodes = couponCodes;
  }

  /**
   * 是否已收藏该优惠/商家
   **/
  @ApiModelProperty(value = "是否已收藏该优惠/商家")
  public String getIsFavorite() {
    return isFavorite;
  }
  public void setIsFavorite(String isFavorite) {
    this.isFavorite = isFavorite;
  }

  /**
   * 发布时间
   **/
  @ApiModelProperty(value = "发布时间")
  public String getPublishTime() {
    return publishTime;
  }
  public void setPublishTime(String publishTime) {
    this.publishTime = publishTime;
  }

  /**
   * 跳转地址
   **/
  @ApiModelProperty(value = "跳转地址")
  public String getJumpUrl() {
    return jumpUrl;
  }
  public void setJumpUrl(String jumpUrl) {
    this.jumpUrl = jumpUrl;
  }

  /**
   * 跳转延迟秒数
   **/
  @ApiModelProperty(value = "跳转延迟秒数")
  public String getJumpDelay() {
    return jumpDelay;
  }
  public void setJumpDelay(String jumpDelay) {
    this.jumpDelay = jumpDelay;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShoppingJumpingPageModel shoppingJumpingPageModel = (ShoppingJumpingPageModel) o;
    return (storeId == null ? shoppingJumpingPageModel.storeId == null : storeId.equals(shoppingJumpingPageModel.storeId)) &&
        (dealInfo == null ? shoppingJumpingPageModel.dealInfo == null : dealInfo.equals(shoppingJumpingPageModel.dealInfo)) &&
        (storeName == null ? shoppingJumpingPageModel.storeName == null : storeName.equals(shoppingJumpingPageModel.storeName)) &&
        (storeDescription == null ? shoppingJumpingPageModel.storeDescription == null : storeDescription.equals(shoppingJumpingPageModel.storeDescription)) &&
        (storeLogo == null ? shoppingJumpingPageModel.storeLogo == null : storeLogo.equals(shoppingJumpingPageModel.storeLogo)) &&
        (countryFlagPic == null ? shoppingJumpingPageModel.countryFlagPic == null : countryFlagPic.equals(shoppingJumpingPageModel.countryFlagPic)) &&
        (rebateView == null ? shoppingJumpingPageModel.rebateView == null : rebateView.equals(shoppingJumpingPageModel.rebateView)) &&
        (rebateInstruction == null ? shoppingJumpingPageModel.rebateInstruction == null : rebateInstruction.equals(shoppingJumpingPageModel.rebateInstruction)) &&
        (cardSupported == null ? shoppingJumpingPageModel.cardSupported == null : cardSupported.equals(shoppingJumpingPageModel.cardSupported)) &&
        (alipaySupported == null ? shoppingJumpingPageModel.alipaySupported == null : alipaySupported.equals(shoppingJumpingPageModel.alipaySupported)) &&
        (paypalSupported == null ? shoppingJumpingPageModel.paypalSupported == null : paypalSupported.equals(shoppingJumpingPageModel.paypalSupported)) &&
        (directPostSupported == null ? shoppingJumpingPageModel.directPostSupported == null : directPostSupported.equals(shoppingJumpingPageModel.directPostSupported)) &&
        (transshippingSupported == null ? shoppingJumpingPageModel.transshippingSupported == null : transshippingSupported.equals(shoppingJumpingPageModel.transshippingSupported)) &&
        (mobileHasRebate == null ? shoppingJumpingPageModel.mobileHasRebate == null : mobileHasRebate.equals(shoppingJumpingPageModel.mobileHasRebate)) &&
        (boundedAccessing == null ? shoppingJumpingPageModel.boundedAccessing == null : boundedAccessing.equals(shoppingJumpingPageModel.boundedAccessing)) &&
        (couponCodes == null ? shoppingJumpingPageModel.couponCodes == null : couponCodes.equals(shoppingJumpingPageModel.couponCodes)) &&
        (isFavorite == null ? shoppingJumpingPageModel.isFavorite == null : isFavorite.equals(shoppingJumpingPageModel.isFavorite)) &&
        (publishTime == null ? shoppingJumpingPageModel.publishTime == null : publishTime.equals(shoppingJumpingPageModel.publishTime)) &&
        (jumpUrl == null ? shoppingJumpingPageModel.jumpUrl == null : jumpUrl.equals(shoppingJumpingPageModel.jumpUrl)) &&
        (jumpDelay == null ? shoppingJumpingPageModel.jumpDelay == null : jumpDelay.equals(shoppingJumpingPageModel.jumpDelay));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (storeId == null ? 0: storeId.hashCode());
    result = 31 * result + (dealInfo == null ? 0: dealInfo.hashCode());
    result = 31 * result + (storeName == null ? 0: storeName.hashCode());
    result = 31 * result + (storeDescription == null ? 0: storeDescription.hashCode());
    result = 31 * result + (storeLogo == null ? 0: storeLogo.hashCode());
    result = 31 * result + (countryFlagPic == null ? 0: countryFlagPic.hashCode());
    result = 31 * result + (rebateView == null ? 0: rebateView.hashCode());
    result = 31 * result + (rebateInstruction == null ? 0: rebateInstruction.hashCode());
    result = 31 * result + (cardSupported == null ? 0: cardSupported.hashCode());
    result = 31 * result + (alipaySupported == null ? 0: alipaySupported.hashCode());
    result = 31 * result + (paypalSupported == null ? 0: paypalSupported.hashCode());
    result = 31 * result + (directPostSupported == null ? 0: directPostSupported.hashCode());
    result = 31 * result + (transshippingSupported == null ? 0: transshippingSupported.hashCode());
    result = 31 * result + (mobileHasRebate == null ? 0: mobileHasRebate.hashCode());
    result = 31 * result + (boundedAccessing == null ? 0: boundedAccessing.hashCode());
    result = 31 * result + (couponCodes == null ? 0: couponCodes.hashCode());
    result = 31 * result + (isFavorite == null ? 0: isFavorite.hashCode());
    result = 31 * result + (publishTime == null ? 0: publishTime.hashCode());
    result = 31 * result + (jumpUrl == null ? 0: jumpUrl.hashCode());
    result = 31 * result + (jumpDelay == null ? 0: jumpDelay.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShoppingJumpingPageModel {\n");
    
    sb.append("  storeId: ").append(storeId).append("\n");
    sb.append("  dealInfo: ").append(dealInfo).append("\n");
    sb.append("  storeName: ").append(storeName).append("\n");
    sb.append("  storeDescription: ").append(storeDescription).append("\n");
    sb.append("  storeLogo: ").append(storeLogo).append("\n");
    sb.append("  countryFlagPic: ").append(countryFlagPic).append("\n");
    sb.append("  rebateView: ").append(rebateView).append("\n");
    sb.append("  rebateInstruction: ").append(rebateInstruction).append("\n");
    sb.append("  cardSupported: ").append(cardSupported).append("\n");
    sb.append("  alipaySupported: ").append(alipaySupported).append("\n");
    sb.append("  paypalSupported: ").append(paypalSupported).append("\n");
    sb.append("  directPostSupported: ").append(directPostSupported).append("\n");
    sb.append("  transshippingSupported: ").append(transshippingSupported).append("\n");
    sb.append("  mobileHasRebate: ").append(mobileHasRebate).append("\n");
    sb.append("  boundedAccessing: ").append(boundedAccessing).append("\n");
    sb.append("  couponCodes: ").append(couponCodes).append("\n");
    sb.append("  isFavorite: ").append(isFavorite).append("\n");
    sb.append("  publishTime: ").append(publishTime).append("\n");
    sb.append("  jumpUrl: ").append(jumpUrl).append("\n");
    sb.append("  jumpDelay: ").append(jumpDelay).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
