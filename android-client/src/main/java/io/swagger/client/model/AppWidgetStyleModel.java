/**
 * 五五海淘返利APP新版接口
 * 更新日志<br> 相对于上一build的变更： <br/>Nu 调整搜索模型 
 *
 * OpenAPI spec version: 1.8 build20180202-2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.AppWidgetStyleModelImageStyle;
import io.swagger.client.model.AppWidgetStyleModelTextStyle;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class AppWidgetStyleModel  {
  
  @SerializedName("style_id")
  private String styleId = null;
  @SerializedName("type")
  private String type = null;
  @SerializedName("text_style")
  private AppWidgetStyleModelTextStyle textStyle = null;
  @SerializedName("image_style")
  private AppWidgetStyleModelImageStyle imageStyle = null;

  /**
   * 风格ID
   **/
  @ApiModelProperty(value = "风格ID")
  public String getStyleId() {
    return styleId;
  }
  public void setStyleId(String styleId) {
    this.styleId = styleId;
  }

  /**
   * 控件类型 - 1：带文字的图标 2：图片 3：纯文字
   **/
  @ApiModelProperty(value = "控件类型 - 1：带文字的图标 2：图片 3：纯文字")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AppWidgetStyleModelTextStyle getTextStyle() {
    return textStyle;
  }
  public void setTextStyle(AppWidgetStyleModelTextStyle textStyle) {
    this.textStyle = textStyle;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AppWidgetStyleModelImageStyle getImageStyle() {
    return imageStyle;
  }
  public void setImageStyle(AppWidgetStyleModelImageStyle imageStyle) {
    this.imageStyle = imageStyle;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppWidgetStyleModel appWidgetStyleModel = (AppWidgetStyleModel) o;
    return (styleId == null ? appWidgetStyleModel.styleId == null : styleId.equals(appWidgetStyleModel.styleId)) &&
        (type == null ? appWidgetStyleModel.type == null : type.equals(appWidgetStyleModel.type)) &&
        (textStyle == null ? appWidgetStyleModel.textStyle == null : textStyle.equals(appWidgetStyleModel.textStyle)) &&
        (imageStyle == null ? appWidgetStyleModel.imageStyle == null : imageStyle.equals(appWidgetStyleModel.imageStyle));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (styleId == null ? 0: styleId.hashCode());
    result = 31 * result + (type == null ? 0: type.hashCode());
    result = 31 * result + (textStyle == null ? 0: textStyle.hashCode());
    result = 31 * result + (imageStyle == null ? 0: imageStyle.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppWidgetStyleModel {\n");
    
    sb.append("  styleId: ").append(styleId).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  textStyle: ").append(textStyle).append("\n");
    sb.append("  imageStyle: ").append(imageStyle).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
