/**
 * 五五海淘返利APP新版接口
 * 更新日志<br> 相对于上一build的变更： <br/>Nu 调整搜索模型 
 *
 * OpenAPI spec version: 1.8 build20180202-2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class UserInfoQuickViewIfModelData  {
  
  @SerializedName("uid")
  private String uid = null;
  @SerializedName("username")
  private String username = null;
  @SerializedName("avatar")
  private String avatar = null;
  @SerializedName("balance")
  private String balance = null;
  @SerializedName("freezed_balance")
  private String freezedBalance = null;
  @SerializedName("balance_view")
  private String balanceView = null;
  @SerializedName("freezed_balance_view")
  private String freezedBalanceView = null;
  @SerializedName("is_vip")
  private String isVip = null;
  @SerializedName("level")
  private String level = null;
  @SerializedName("group_name")
  private String groupName = null;
  @SerializedName("waiting_for_effect_orders_count")
  private String waitingForEffectOrdersCount = null;

  /**
   * 用户ID
   **/
  @ApiModelProperty(value = "用户ID")
  public String getUid() {
    return uid;
  }
  public void setUid(String uid) {
    this.uid = uid;
  }

  /**
   * 用户名
   **/
  @ApiModelProperty(value = "用户名")
  public String getUsername() {
    return username;
  }
  public void setUsername(String username) {
    this.username = username;
  }

  /**
   * 用户头像地址
   **/
  @ApiModelProperty(value = "用户头像地址")
  public String getAvatar() {
    return avatar;
  }
  public void setAvatar(String avatar) {
    this.avatar = avatar;
  }

  /**
   * 可用金额
   **/
  @ApiModelProperty(value = "可用金额")
  public String getBalance() {
    return balance;
  }
  public void setBalance(String balance) {
    this.balance = balance;
  }

  /**
   * 待可用金额
   **/
  @ApiModelProperty(value = "待可用金额")
  public String getFreezedBalance() {
    return freezedBalance;
  }
  public void setFreezedBalance(String freezedBalance) {
    this.freezedBalance = freezedBalance;
  }

  /**
   * 可用余额(文字描述)
   **/
  @ApiModelProperty(value = "可用余额(文字描述)")
  public String getBalanceView() {
    return balanceView;
  }
  public void setBalanceView(String balanceView) {
    this.balanceView = balanceView;
  }

  /**
   * 待可用余额(文字描述)
   **/
  @ApiModelProperty(value = "待可用余额(文字描述)")
  public String getFreezedBalanceView() {
    return freezedBalanceView;
  }
  public void setFreezedBalanceView(String freezedBalanceView) {
    this.freezedBalanceView = freezedBalanceView;
  }

  /**
   * 是否是VIP - 0为否 1为是
   **/
  @ApiModelProperty(value = "是否是VIP - 0为否 1为是")
  public String getIsVip() {
    return isVip;
  }
  public void setIsVip(String isVip) {
    this.isVip = isVip;
  }

  /**
   * 等级
   **/
  @ApiModelProperty(value = "等级")
  public String getLevel() {
    return level;
  }
  public void setLevel(String level) {
    this.level = level;
  }

  /**
   * 用户组名
   **/
  @ApiModelProperty(value = "用户组名")
  public String getGroupName() {
    return groupName;
  }
  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  /**
   * 待生效订单数
   **/
  @ApiModelProperty(value = "待生效订单数")
  public String getWaitingForEffectOrdersCount() {
    return waitingForEffectOrdersCount;
  }
  public void setWaitingForEffectOrdersCount(String waitingForEffectOrdersCount) {
    this.waitingForEffectOrdersCount = waitingForEffectOrdersCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserInfoQuickViewIfModelData userInfoQuickViewIfModelData = (UserInfoQuickViewIfModelData) o;
    return (uid == null ? userInfoQuickViewIfModelData.uid == null : uid.equals(userInfoQuickViewIfModelData.uid)) &&
        (username == null ? userInfoQuickViewIfModelData.username == null : username.equals(userInfoQuickViewIfModelData.username)) &&
        (avatar == null ? userInfoQuickViewIfModelData.avatar == null : avatar.equals(userInfoQuickViewIfModelData.avatar)) &&
        (balance == null ? userInfoQuickViewIfModelData.balance == null : balance.equals(userInfoQuickViewIfModelData.balance)) &&
        (freezedBalance == null ? userInfoQuickViewIfModelData.freezedBalance == null : freezedBalance.equals(userInfoQuickViewIfModelData.freezedBalance)) &&
        (balanceView == null ? userInfoQuickViewIfModelData.balanceView == null : balanceView.equals(userInfoQuickViewIfModelData.balanceView)) &&
        (freezedBalanceView == null ? userInfoQuickViewIfModelData.freezedBalanceView == null : freezedBalanceView.equals(userInfoQuickViewIfModelData.freezedBalanceView)) &&
        (isVip == null ? userInfoQuickViewIfModelData.isVip == null : isVip.equals(userInfoQuickViewIfModelData.isVip)) &&
        (level == null ? userInfoQuickViewIfModelData.level == null : level.equals(userInfoQuickViewIfModelData.level)) &&
        (groupName == null ? userInfoQuickViewIfModelData.groupName == null : groupName.equals(userInfoQuickViewIfModelData.groupName)) &&
        (waitingForEffectOrdersCount == null ? userInfoQuickViewIfModelData.waitingForEffectOrdersCount == null : waitingForEffectOrdersCount.equals(userInfoQuickViewIfModelData.waitingForEffectOrdersCount));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (uid == null ? 0: uid.hashCode());
    result = 31 * result + (username == null ? 0: username.hashCode());
    result = 31 * result + (avatar == null ? 0: avatar.hashCode());
    result = 31 * result + (balance == null ? 0: balance.hashCode());
    result = 31 * result + (freezedBalance == null ? 0: freezedBalance.hashCode());
    result = 31 * result + (balanceView == null ? 0: balanceView.hashCode());
    result = 31 * result + (freezedBalanceView == null ? 0: freezedBalanceView.hashCode());
    result = 31 * result + (isVip == null ? 0: isVip.hashCode());
    result = 31 * result + (level == null ? 0: level.hashCode());
    result = 31 * result + (groupName == null ? 0: groupName.hashCode());
    result = 31 * result + (waitingForEffectOrdersCount == null ? 0: waitingForEffectOrdersCount.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserInfoQuickViewIfModelData {\n");
    
    sb.append("  uid: ").append(uid).append("\n");
    sb.append("  username: ").append(username).append("\n");
    sb.append("  avatar: ").append(avatar).append("\n");
    sb.append("  balance: ").append(balance).append("\n");
    sb.append("  freezedBalance: ").append(freezedBalance).append("\n");
    sb.append("  balanceView: ").append(balanceView).append("\n");
    sb.append("  freezedBalanceView: ").append(freezedBalanceView).append("\n");
    sb.append("  isVip: ").append(isVip).append("\n");
    sb.append("  level: ").append(level).append("\n");
    sb.append("  groupName: ").append(groupName).append("\n");
    sb.append("  waitingForEffectOrdersCount: ").append(waitingForEffectOrdersCount).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
