/**
 * 五五海淘返利APP新版接口
 * 更新日志<br> 相对于上一build的变更： <br/>Nu 调整搜索模型 
 *
 * OpenAPI spec version: 1.8 build20180202-2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class InviterModel  {
  
  @SerializedName("uid")
  private String uid = null;
  @SerializedName("username")
  private String username = null;
  @SerializedName("user_avatar")
  private String userAvatar = null;
  @SerializedName("invited_count_view")
  private String invitedCountView = null;
  @SerializedName("reward_view")
  private String rewardView = null;

  /**
   * 用户ID
   **/
  @ApiModelProperty(value = "用户ID")
  public String getUid() {
    return uid;
  }
  public void setUid(String uid) {
    this.uid = uid;
  }

  /**
   * 昵称
   **/
  @ApiModelProperty(value = "昵称")
  public String getUsername() {
    return username;
  }
  public void setUsername(String username) {
    this.username = username;
  }

  /**
   * 头像
   **/
  @ApiModelProperty(value = "头像")
  public String getUserAvatar() {
    return userAvatar;
  }
  public void setUserAvatar(String userAvatar) {
    this.userAvatar = userAvatar;
  }

  /**
   * 邀请好友数量（文字说明）
   **/
  @ApiModelProperty(value = "邀请好友数量（文字说明）")
  public String getInvitedCountView() {
    return invitedCountView;
  }
  public void setInvitedCountView(String invitedCountView) {
    this.invitedCountView = invitedCountView;
  }

  /**
   * 奖励金额（文字说明）
   **/
  @ApiModelProperty(value = "奖励金额（文字说明）")
  public String getRewardView() {
    return rewardView;
  }
  public void setRewardView(String rewardView) {
    this.rewardView = rewardView;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InviterModel inviterModel = (InviterModel) o;
    return (uid == null ? inviterModel.uid == null : uid.equals(inviterModel.uid)) &&
        (username == null ? inviterModel.username == null : username.equals(inviterModel.username)) &&
        (userAvatar == null ? inviterModel.userAvatar == null : userAvatar.equals(inviterModel.userAvatar)) &&
        (invitedCountView == null ? inviterModel.invitedCountView == null : invitedCountView.equals(inviterModel.invitedCountView)) &&
        (rewardView == null ? inviterModel.rewardView == null : rewardView.equals(inviterModel.rewardView));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (uid == null ? 0: uid.hashCode());
    result = 31 * result + (username == null ? 0: username.hashCode());
    result = 31 * result + (userAvatar == null ? 0: userAvatar.hashCode());
    result = 31 * result + (invitedCountView == null ? 0: invitedCountView.hashCode());
    result = 31 * result + (rewardView == null ? 0: rewardView.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InviterModel {\n");
    
    sb.append("  uid: ").append(uid).append("\n");
    sb.append("  username: ").append(username).append("\n");
    sb.append("  userAvatar: ").append(userAvatar).append("\n");
    sb.append("  invitedCountView: ").append(invitedCountView).append("\n");
    sb.append("  rewardView: ").append(rewardView).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
