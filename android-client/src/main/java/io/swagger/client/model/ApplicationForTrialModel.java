/**
 * 五五海淘返利APP新版接口
 * 更新日志<br> 相对于上一build的变更： <br/>Nu 调整搜索模型 
 *
 * OpenAPI spec version: 1.8 build20180202-2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


/**
 * 申请试用记录模型
 **/
@ApiModel(description = "申请试用记录模型")
public class ApplicationForTrialModel  {
  
  @SerializedName("trial_id")
  private String trialId = null;
  @SerializedName("topic_id")
  private String topicId = null;
  @SerializedName("status")
  private String status = null;
  @SerializedName("status_view")
  private String statusView = null;
  @SerializedName("goods_title")
  private String goodsTitle = null;
  @SerializedName("goods_pic")
  private String goodsPic = null;
  @SerializedName("left_time")
  private String leftTime = null;
  @SerializedName("total_count")
  private String totalCount = null;
  @SerializedName("applications_count")
  private String applicationsCount = null;

  /**
   * 试用ID
   **/
  @ApiModelProperty(value = "试用ID")
  public String getTrialId() {
    return trialId;
  }
  public void setTrialId(String trialId) {
    this.trialId = trialId;
  }

  /**
   * 试用关联的帖子ID
   **/
  @ApiModelProperty(value = "试用关联的帖子ID")
  public String getTopicId() {
    return topicId;
  }
  public void setTopicId(String topicId) {
    this.topicId = topicId;
  }

  /**
   * 状态 - 0：申请成功 1：申请中 2：申请失败
   **/
  @ApiModelProperty(value = "状态 - 0：申请成功 1：申请中 2：申请失败")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }

  /**
   * 状态文字说明
   **/
  @ApiModelProperty(value = "状态文字说明")
  public String getStatusView() {
    return statusView;
  }
  public void setStatusView(String statusView) {
    this.statusView = statusView;
  }

  /**
   * 试用商品标题
   **/
  @ApiModelProperty(value = "试用商品标题")
  public String getGoodsTitle() {
    return goodsTitle;
  }
  public void setGoodsTitle(String goodsTitle) {
    this.goodsTitle = goodsTitle;
  }

  /**
   * 试用商品封面
   **/
  @ApiModelProperty(value = "试用商品封面")
  public String getGoodsPic() {
    return goodsPic;
  }
  public void setGoodsPic(String goodsPic) {
    this.goodsPic = goodsPic;
  }

  /**
   * 剩余时间
   **/
  @ApiModelProperty(value = "剩余时间")
  public String getLeftTime() {
    return leftTime;
  }
  public void setLeftTime(String leftTime) {
    this.leftTime = leftTime;
  }

  /**
   * 试用产品总数
   **/
  @ApiModelProperty(value = "试用产品总数")
  public String getTotalCount() {
    return totalCount;
  }
  public void setTotalCount(String totalCount) {
    this.totalCount = totalCount;
  }

  /**
   * 申请总数
   **/
  @ApiModelProperty(value = "申请总数")
  public String getApplicationsCount() {
    return applicationsCount;
  }
  public void setApplicationsCount(String applicationsCount) {
    this.applicationsCount = applicationsCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationForTrialModel applicationForTrialModel = (ApplicationForTrialModel) o;
    return (trialId == null ? applicationForTrialModel.trialId == null : trialId.equals(applicationForTrialModel.trialId)) &&
        (topicId == null ? applicationForTrialModel.topicId == null : topicId.equals(applicationForTrialModel.topicId)) &&
        (status == null ? applicationForTrialModel.status == null : status.equals(applicationForTrialModel.status)) &&
        (statusView == null ? applicationForTrialModel.statusView == null : statusView.equals(applicationForTrialModel.statusView)) &&
        (goodsTitle == null ? applicationForTrialModel.goodsTitle == null : goodsTitle.equals(applicationForTrialModel.goodsTitle)) &&
        (goodsPic == null ? applicationForTrialModel.goodsPic == null : goodsPic.equals(applicationForTrialModel.goodsPic)) &&
        (leftTime == null ? applicationForTrialModel.leftTime == null : leftTime.equals(applicationForTrialModel.leftTime)) &&
        (totalCount == null ? applicationForTrialModel.totalCount == null : totalCount.equals(applicationForTrialModel.totalCount)) &&
        (applicationsCount == null ? applicationForTrialModel.applicationsCount == null : applicationsCount.equals(applicationForTrialModel.applicationsCount));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (trialId == null ? 0: trialId.hashCode());
    result = 31 * result + (topicId == null ? 0: topicId.hashCode());
    result = 31 * result + (status == null ? 0: status.hashCode());
    result = 31 * result + (statusView == null ? 0: statusView.hashCode());
    result = 31 * result + (goodsTitle == null ? 0: goodsTitle.hashCode());
    result = 31 * result + (goodsPic == null ? 0: goodsPic.hashCode());
    result = 31 * result + (leftTime == null ? 0: leftTime.hashCode());
    result = 31 * result + (totalCount == null ? 0: totalCount.hashCode());
    result = 31 * result + (applicationsCount == null ? 0: applicationsCount.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationForTrialModel {\n");
    
    sb.append("  trialId: ").append(trialId).append("\n");
    sb.append("  topicId: ").append(topicId).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  statusView: ").append(statusView).append("\n");
    sb.append("  goodsTitle: ").append(goodsTitle).append("\n");
    sb.append("  goodsPic: ").append(goodsPic).append("\n");
    sb.append("  leftTime: ").append(leftTime).append("\n");
    sb.append("  totalCount: ").append(totalCount).append("\n");
    sb.append("  applicationsCount: ").append(applicationsCount).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
